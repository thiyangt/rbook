[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Programming and Data Analysis with R",
    "section": "",
    "text": "Preface\nThe goal of this book is to empower you with essential skills in R programming for statistical computing and data analysis.\nEach chapter of this book is designed to be hands-on and practical, with explanations, illustrative examples, and exercises to reinforce your understanding.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction to R and RStudio",
    "section": "",
    "text": "1.1 Chapter Roadmap",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#chapter-roadmap",
    "href": "intro.html#chapter-roadmap",
    "title": "1  Introduction to R and RStudio",
    "section": "",
    "text": "What is R?\nWhy learn R?\nR and Rstudio\nDownloading R and RStudio\nInstalling R and RStudio\nDownload and Installing Rtools\nFamiliarize with RStudio interface\nCreating and saving an RStudio project",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#what-is-r",
    "href": "intro.html#what-is-r",
    "title": "1  Introduction to R and RStudio",
    "section": "1.2 What is R?",
    "text": "1.2 What is R?\nR is a popular programming language and environment specifically designed for statistical computing, data analysis, and data visualisation. The language designers are Ross Ihaka and Robert Gentleman at the Department of Statistics, University of Auckland, New Zealand. The parent language is S. R is primarily a functional programming language.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#why-learn-r",
    "href": "intro.html#why-learn-r",
    "title": "1  Introduction to R and RStudio",
    "section": "1.3 Why learn R?",
    "text": "1.3 Why learn R?\n1. R is a free and open-source software package.\n2. R is a powerful software for data analysis and statistical computing.\nFollowing are some steps that need to perform for your data analysis projects.\n\nImport/ Export data\nData cleaning\nData visualisation\nData modelling\nModel deployment\nEnsuring validity and interpretability of models\nPresentation and communication of results\n\nAdditionally, ensuring the reproducibility of data analysis and modeling workflows is crucial for enhancing trustworthiness. R has packages to fulfill all these data analysis and modeling needs.\n3. R can be utilized for tasks beyond traditional data analysis, modelling and statistical computing\n\nScientific Writing Tools: R can be used for scientific writing, particularly through the use of packages like knitr rmarkdown, and Quarto. These packages allow you to integrate R code directly into documents alongside text and figures, which is highly useful for reproducible research and automated report generation. These are useful for thesis writing, book writing or any other documentation work. This book “Programming and Data Analysis with R” is written based on Quarto.\nWebsite Development: R can be used developed websites, particularly through the use of packages like knitr rmarkdown, blogdown and Quarto. For example, the website https://hellor.netlify.app/ is written based on blogdown and https://thiyangt.github.io/rprogramming/ is written based on quarto.\nCreating Presentations: R can generate dynamic and visually appealing presentations using rmarkdown, xaringan, quarto, etc. These packages enable you to embed R code, plots, and interactive elements directly into presentation slides. Here is an example presentation developed using xaringan https://thiyangt.github.io/whyR2021keynote/#1\nCreating Posters: R can be utilized to design scientific posters using packages such as posterdown. These packages provide templates for creating professional-looking posters directly from R Markdown documents. You can include plots, tables, formatted text and graphics in your poster design.\nWeb Application Development: This capability is particularly useful for developing data-driven tools, simulations, and dashboards that can be accessed through web browsers without the need for users to install additional software.\n\n4. There is a large community of users.\nLearning a programming language with a large community of users is particularly important for several reasons:\n\nSupport and Resources to learn: This means there are abundant resources available online, including tutorials, documentation, forums, and open-source libraries. When you encounter issues or need guidance, you’re more likely to find solutions quickly due to the active community.\nRegular updates and improvements: Popular languages receive regular updates and improvements driven by community feedback and contributions.\nCollaboration and Career opportunities: Since, there are many users you are very likely to find good job opportunities and collaboration opportunities.\nNetworking: Being part of a large programming community allows you to participate in blackthorns, and attend meetups or conferences. One such a R community is “R Ladies”.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#r-and-rstudio",
    "href": "intro.html#r-and-rstudio",
    "title": "1  Introduction to R and RStudio",
    "section": "1.4 R and RStudio",
    "text": "1.4 R and RStudio\nWhat is the difference between R and RStudio? R is the programming language that provides the statistical computing capabilities. R Studio is an Integrated Development Environment(IDE) for R. Dr Julia Lowndes illustrates the distinctions between R and RStudio using the analogy as follows:\n\n“If R were an airplane, RStudio would be the airport, providing many, many supporting services that make it easier for you, the pilot, to take off and go to awesome places. Sure, you can fly an airplane without an airport, but having those runways and supporting infrastructure is a game-changer.”\n\n\nJulie Lowndes (https://jules32.github.io/2016-07-12-Oxford/R_RStudio/, accessed on May 1, 2024)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#downloading-r-and-rstudio",
    "href": "intro.html#downloading-r-and-rstudio",
    "title": "1  Introduction to R and RStudio",
    "section": "1.5 Downloading R and RStudio",
    "text": "1.5 Downloading R and RStudio\nTo download R:\nVisit the link https://cran.r-project.org/ to download R. Choose the appropriate version depending on the operating system you are using.\nTo download RStudio (This can also be used to download R as well):\nVisit the link https://posit.co/download/rstudio-desktop/ to download RStudio IDE. Make sure that you are downloading the appropriate version that matches your computer’s operating system. From the same link you can also download the R. Furthermore, RStudio requires a specific version of R. For example “RStudio requires R 3.3.0+”. Make sure you have the correct R version. The version of the R programming language is denoted using a format like “x.x.x”, where each “x” represents a number indicating the major version, minor version, and patch level respectively.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#installing-r-and-rstudio",
    "href": "intro.html#installing-r-and-rstudio",
    "title": "1  Introduction to R and RStudio",
    "section": "1.6 Installing R and Rstudio",
    "text": "1.6 Installing R and Rstudio\nFirst, you should install R. After installation R, you can install RStudio.\n\n1.6.1 Installing R\nDouble click on the the downloaded R installer file. This will start the install process. Usually the default options are fine.\n\n\n\n1.6.2 Installing RStudio\nYou must have R installed before installing RStudio. Double click on the the downloaded RStudio installer file. This will start the install process. Usually the default options are fine.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#download-and-installing-rtools",
    "href": "intro.html#download-and-installing-rtools",
    "title": "1  Introduction to R and RStudio",
    "section": "1.7 Download and Installing Rtools",
    "text": "1.7 Download and Installing Rtools\nWindows users also require additional software known as Rtools, particularly for installing certain packages. Go to the website https://cran.r-project.org/bin/windows/Rtools/ and download the Rtools version that is compatible with your R version.\nIf you want to watch a step-by-step tutorial on how to install R for Windows, you can watch the video here.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#familiarize-with-rstudio-interface",
    "href": "intro.html#familiarize-with-rstudio-interface",
    "title": "1  Introduction to R and RStudio",
    "section": "1.8 Familiarize with RStudio interface",
    "text": "1.8 Familiarize with RStudio interface\nStep 1: Double click RStudio icon. This will open an RStudio project window as follows:\n\n\n\n\n\n\n\n\n\nStep 2: To obtain the source or script editor use the following steps:\nFile &gt; New File &gt; R Script\n\n\n\n\n\n\n\n\n\nNow we have four window. They are as follows:\n\n\n\n\n\n\n\n\n\n\nSource window: Here you can write your R codes.\nConsole: This is where you execute your commands to obtain the outputs.\nEnvironment, History, Connections, Tutorial: Out of the different tabs you see here, the most important ones are the environment and the history tab.\n\nThe Environment pane shows all the objects (like data frames, variables, functions, etc.) that are currently in your R session.\nThe History tab keeps a record of all the commands you have run in the Console.\n\nFile, Plots, Packages, Help, Viewer, Presentations:\n\nFiles allows you to navigate your files.\nThe graphical outputs are displayed here.\nAllows users to install, update, load, unload packages\nHelp files corresponds to the functions are shown here. Help files provides function descriptions, examples and references for you to learn on your own. To access the help file of a function type “?” followed by the function name . For example, `?ls`.\nViewer/ Presentations: Useful when working with RMarkdown or Quarto documentations. We will look at this in Chapter 8.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#change-the-appearance-of-rstudio-pane",
    "href": "intro.html#change-the-appearance-of-rstudio-pane",
    "title": "1  Introduction to R and RStudio",
    "section": "1.9 Change the appearance of RStudio pane",
    "text": "1.9 Change the appearance of RStudio pane\nThis is an optional step. To change the appearance, font size, RStudio theme colour follow the steps below:\nStep 1: Go to Tools &gt; Global Options. You will get the window below\n\n\n\n\n\n\n\n\n\nStep 2: Select Appearance tab\n\n\n\n\n\n\n\n\n\nHere, I select the theme to “Cobalt”. Then the appearance of the window will change as below:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#creating-an-rstudio-project",
    "href": "intro.html#creating-an-rstudio-project",
    "title": "1  Introduction to R and RStudio",
    "section": "1.10 Creating an RStudio project",
    "text": "1.10 Creating an RStudio project\nTo create an RStudio project, please follow the following steps\nStep 1: File &gt; New Projects\n\n\n\n\n\n\n\n\n\nStep 2: Click on the “New Directory” on the following window.\n\n\n\n\n\n\n\n\n\nStep 3: Click on “New Project”\n\n\n\n\n\n\n\n\n\nStep 4: Give a directory name and a path to save",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#to-save-an-r-studio-projects",
    "href": "intro.html#to-save-an-r-studio-projects",
    "title": "1  Introduction to R and RStudio",
    "section": "1.11 To save an R Studio projects",
    "text": "1.11 To save an R Studio projects\nCategory 1: If you have created a project using the steps shown in Section 1.10, you can save your R Script files by clicking on the floppy disk icon, as illustrated in the figure below:\n\n\n\n\n\n\n\n\n\nCategory 2: If you started coding without creating a project and want to save your work, go to File &gt; Save As and follow the steps.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#exercise",
    "href": "intro.html#exercise",
    "title": "1  Introduction to R and RStudio",
    "section": "1.12 Exercise",
    "text": "1.12 Exercise\nThe goal of this exercise is to help you become familiar with the R Studio environment and create and save projects.\n\nCreate a new project in the RStudio IDE. Name your project as lesson1.\nSelect a suitable theme for your RStudio IDE’s user interface.\n\n\nHelp: Navigate to Tools &gt; Global Options &gt; Appearance .\n\n\nChange the RStudio pane layout as follows:\n\n\n\n\n\n\n\n\n\n\n\nCreate a folder called data inside your lesson1 project folder.\nCreate another folder called src inside your lesson1 project folder.\nOpen a script file and save it as exercise1.R inside the src folder.\nType the following commands on exercise1.R and run it on the console. See the changes happening under the “Environment” tab and the “History” tab.\n\n\n100 + 200\nrnorm(100)\ngrades &lt;- c(\"A+\", \"A-\", \"A\", \"B\", \"F\")\nrandom.numbers &lt;- rnorm(100)\nrandom.numbers*100\nls()\n\n\nClose the project by saving the workspace.\nReopen your project by clicking the leason1.Rproj inside your lesson1 folder. Open the .RData file and the .Rhistory file and observe them.\nType the following commands on exercise1.R and run them on the console.\n\n\nmarks &lt;- c(100, 70, 80, 60)\n\n\nClose the project without saving the workspace.\nReopen the lesson1.Rproj and type ls() on the console, and observe the output. (marks is not listed, but the other objects are available. Why?)\nType the following command in the console to observe changes in the console, environment, history, and Viewer windows. Observe the outputs of the code and gain an understanding of the purpose of each line.\n\n\ndata(\"iris\")\nView(iris)\nsummary(iris)\nhist(iris$Sepal.Length)\nplot(x=iris$Sepal.Length, y=iris$Sepal.Width) # Method 1\nplot(Sepal.Length ~ Sepal.Width, data=iris) # Method 2\nplot(x=iris$Sepal.Length, y=iris$Sepal.Width, col=iris$Species) \nplot(Sepal.Length ~ Sepal.Width, data=iris)\nplot(Sepal.Length ~ Sepal.Width, pch=16, cex=0.6, data=iris)\nplot(Sepal.Length ~ Sepal.Width, pch=16, cex=0.6, data=iris)\nplot(Sepal.Length ~ Sepal.Width, col=\"forestgreen\", pch=16, cex=0.6, data=iris)\n\n\nType the following code to obtain list of predefined colours.\n\n\ncolours()\n\n\nExplore what changes the following code do on the last plot that you took.\n\ncode chunk 15.1\n\nplot(Sepal.Length ~ Sepal.Width, col=\"forestgreen\", pch=16, cex=0.6, data=iris, main = \"Scatterplot Between Sepal Length and Petal Length\",\n     xlab = \"Sepal Length (cm)\",\n     ylab = \"Sepal Width (cm)\")\n\ncode chunk 15.2\n\nmodel &lt;- lm(Sepal.Length ~ Sepal.Width, data=iris)\nplot(Sepal.Length ~ Sepal.Width, col=\"forestgreen\", pch=16, cex=0.6, data=iris, main = \"Scatterplot Between Sepal Length and Petal Length\",\n     xlab = \"Sepal Length (cm)\",\n     ylab = \"Sepal Width (cm)\")\nabline(model, col=\"tomato1\")\n\n\nType the following commands and understand what each line of code is doing. Interpret the outputs.\n\ncode chunk 16.1\n\nplot(iris)\n\ncode chunk 16.2\n\nplot(~ Petal.Length + Petal.Width + Sepal.Width, data=iris)\n\n\nType the following command and open your data folder and see the changes that had occurred.\n\n\nwrite.csv(iris, file=\"data/iris.csv\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "chap2.html",
    "href": "chap2.html",
    "title": "2  Data Structures",
    "section": "",
    "text": "2.1 Vectors\nThere are five main data structures in R. They are:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#vectors",
    "href": "chap2.html#vectors",
    "title": "2  Data Structures",
    "section": "",
    "text": "One dimensional data object.\nHomogeneous data structure. That means data in a vector must only be one type or mode (numeric, character, or logical). You cannot mix different types of data. If you try to mix different types of data, R will automatically convert them into one type.\n\n\n2.1.1 Creating Vectors\nVectors can be made in four primary ways. They are\n\nusing c() function\nusing : function\nusing seq function\nusing rep function\n\nMethods ii–iv simplify vector creation. They are useful when there is a pattern in data.\n\n\n2.1.2 Concatenate: c()\nsyntax:\nExample:\nThe following will create the vector but not assigned a name.\n\nc(1996, 1998, 2000, 2005)\n\n[1] 1996 1998 2000 2005\n\n\nAssigning a name to vector:\nThe advantage of assigning a name is that we can reuse the same set of values by calling the vector name.\n\na &lt;- c(1996, 1998, 2000, 2005)\na\n\n[1] 1996 1998 2000 2005\n\n\n\n\n2.1.3 Colon: :\nThe : function can be used to create a regular decreasing or increasing sequence.\nExamples:\n\n1:10\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n10:1\n\n [1] 10  9  8  7  6  5  4  3  2  1\n\n-0.5:10\n\n [1] -0.5  0.5  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5  9.5\n\n-0.3:10\n\n [1] -0.3  0.7  1.7  2.7  3.7  4.7  5.7  6.7  7.7  8.7  9.7\n\n\nIn all of the above sequences the increment is one. The output will display the numbers only within the range.\n\n\n2.1.4 Sequence: seq\nseq function cal also be used for creating regular sequence. With seq you can control the increment and length of the output.\nExample 1\n\nseq(1, 19)\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19\n\n\nExample 2\n\nseq(1, 19, length.out=8)\n\n[1]  1.000000  3.571429  6.142857  8.714286 11.285714 13.857143 16.428571\n[8] 19.000000\n\n\nExample 3\n\nseq(1, 19, by = 3)\n\n[1]  1  4  7 10 13 16 19\n\n\n\n\n2.1.5 Repeat: rep\nThe rep function can be used if there is a pattern of repetition in the data.\nExample 1\nThe number 8 is repeated three times.\n\nrep(8, 5)\n\n[1] 8 8 8 8 8\n\n\nExample 2\nThe sequence 1, 2, 3 is repeated five times.\n\nrep(1:3, times=5)\n\n [1] 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\n\nExample 3\nSame as in Example 2 above.\n\nrep(1:3, 5)\n\n [1] 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\n\nExample 4\nEach element in the sequence is repeated five times.\n\nrep(1:3, each=5)\n\n [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3\n\n\nExample 5\nFirst, each element is repeated five times. After that, the whole sequence is repeated three times.\n\nrep(1:3, each=5, times=3)\n\n [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 1 1 1 1 1 2 2 2\n[39] 2 2 3 3 3 3 3\n\n\nExample 6\nSame as before. Changing the ordering of each and time does not change the output.\n\nrep(1:3, times=3, each=5)\n\n [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 1 1 1 1 1 2 2 2\n[39] 2 2 3 3 3 3 3\n\n\n\n\n2.1.6 Coercion\nWhen you try to include different types they will be coerced to the most flexible type.\n\na &lt;- c(1, 3, \"GPA\", TRUE, 1L)\ntypeof(a)\n\n[1] \"character\"\n\n\nExplicit coercion means that if we try to convert a data type to another data type intentionally using a specific function. For example,\n\nb &lt;- c(3.1, 3.2, 3.7, 5.9)\nb\n\n[1] 3.1 3.2 3.7 5.9\n\nas.integer(b)\n\n[1] 3 3 3 5\n\n\n\n\n2.1.7 Functions that can be used to inspect vectors\nConsider the vector below\n\nexample.vec &lt;- c(1,  2,  3, 4, 5, 6, 7, 8)\n\n\nTo check the storage mode\n\n\ntypeof(example.vec)\n\n[1] \"double\"\n\n\n\nTo check the class type\n\n\nclass(example.vec)\n\n[1] \"numeric\"\n\n\n\nTesting functions\n\n\nis.character(example.vec)\n\n[1] FALSE\n\nis.integer(example.vec)\n\n[1] FALSE\n\nis.logical(example.vec)\n\n[1] FALSE\n\nis.double(example.vec)\n\n[1] TRUE\n\n\n\nMathematical and statistical functions\n\n\nsum(example.vec)\n\n[1] 36\n\nmean(example.vec)\n\n[1] 4.5\n\nsummary(example.vec)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.00    2.75    4.50    4.50    6.25    8.00 \n\n\n\nTo check if there are any missing values\n\n\nis.na(example.vec)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n\nThere are many more functions that you can use with vectors. We will learn about them in the upcoming chapters.\n\n\n2.1.8 Exercise\n\nWrite R codes to create the following vectors: If you see patterns in the data, use vector simplification methods.\n\n\n\n\n\n\n\n[1] 1990 1992 1934 1957 1970 2000 2005\n\n\n\n\n\n\n\n [1] 3 6 9 3 6 9 3 6 9 3 6 9 3 6 9\n\n\n\n\n\n\n\n [1] 3 3 3 3 3 6 6 6 6 6 9 9 9 9 9\n\n\n\n\n\n\n\n [1] 3 3 3 3 3 6 6 6 6 6 9 9 9 9 9 3 3 3 3 3 6 6 6 6 6 9 9 9 9 9\n\n\n\n\n\n\n\n [1]  1  4  7 10 13 16 19 22 25 28 31 34\n\n\n\n\n\n\n\n  [1] 0.1000000 0.1020202 0.1040404 0.1060606 0.1080808 0.1101010 0.1121212\n  [8] 0.1141414 0.1161616 0.1181818 0.1202020 0.1222222 0.1242424 0.1262626\n [15] 0.1282828 0.1303030 0.1323232 0.1343434 0.1363636 0.1383838 0.1404040\n [22] 0.1424242 0.1444444 0.1464646 0.1484848 0.1505051 0.1525253 0.1545455\n [29] 0.1565657 0.1585859 0.1606061 0.1626263 0.1646465 0.1666667 0.1686869\n [36] 0.1707071 0.1727273 0.1747475 0.1767677 0.1787879 0.1808081 0.1828283\n [43] 0.1848485 0.1868687 0.1888889 0.1909091 0.1929293 0.1949495 0.1969697\n [50] 0.1989899 0.2010101 0.2030303 0.2050505 0.2070707 0.2090909 0.2111111\n [57] 0.2131313 0.2151515 0.2171717 0.2191919 0.2212121 0.2232323 0.2252525\n [64] 0.2272727 0.2292929 0.2313131 0.2333333 0.2353535 0.2373737 0.2393939\n [71] 0.2414141 0.2434343 0.2454545 0.2474747 0.2494949 0.2515152 0.2535354\n [78] 0.2555556 0.2575758 0.2595960 0.2616162 0.2636364 0.2656566 0.2676768\n [85] 0.2696970 0.2717172 0.2737374 0.2757576 0.2777778 0.2797980 0.2818182\n [92] 0.2838384 0.2858586 0.2878788 0.2898990 0.2919192 0.2939394 0.2959596\n [99] 0.2979798 0.3000000\n\n\n\n\n\n\n\n [1] -0.5  0.5  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5  9.5 10.5\n\n\n\n\n\n\n\n [1]  2  4  6  8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50\n[26] 52 54 56 58 60 62 64 66 68 70 72\n\n\n\nUse the typeof() function to check the R storage mode of the following vectors and class() to check the class type of the vector.\n\n\nlogical_vector &lt;- c(TRUE, FALSE, TRUE, FALSE)\ninteger_vector &lt;- c(1L, 2L, 3L, 4L)\ndouble_vector &lt;- c(1.1, 2.2, 3.3, 4.4)\ncomplex_vector &lt;- c(1+1i, 2+2i, 3+3i, 4+4i)\ncharacter_vector &lt;- c(\"a\", \"b\", \"c\", \"d\")\nnull_vector &lt;- NULL\ntime_data &lt;- 1996:2006\ntime_series_data &lt;- ts(1996:2006)\n\n\nCreate the vector (3, 3, 3, . . . 3, 6, 6, . . . 6, 9, 9, 9, . . . 9), where there are 10 occurrences of 3, 20 occurrences of 6 and 30 occurrences of 9.\nFind the value of the following expression.\n\n\n\n\\(\\sum_{i=1}^{100}i\\)\n\\(\\sum_{i=1}^{100}i^2\\)\n\n\n\nGenerate a sequence using the code seq(from=1, to=10, by=1). What other ways can you generate the same sequence?\nCreate a vector to hold population values, and label each element with the corresponding province name. The plot will display population values when hovered over.\n\n\n\n\n\n\n\n\n\n2.1.9 Vector Operations\nVector operations are performed element by element.\n\na &lt;- 1:10\nb &lt;- rep(10:100, by=10)\na + b\n\nWarning in a + b: longer object length is not a multiple of shorter object\nlength\n\n\n [1]  11  13  15  17  19  21  23  25  27  29  21  23  25  27  29  31  33  35  37\n[20]  39  31  33  35  37  39  41  43  45  47  49  41  43  45  47  49  51  53  55\n[39]  57  59  51  53  55  57  59  61  63  65  67  69  61  63  65  67  69  71  73\n[58]  75  77  79  71  73  75  77  79  81  83  85  87  89  81  83  85  87  89  91\n[77]  93  95  97  99  91  93  95  97  99 101 103 105 107 109 101\n\na/b\n\nWarning in a/b: longer object length is not a multiple of shorter object length\n\n\n [1] 0.10000000 0.18181818 0.25000000 0.30769231 0.35714286 0.40000000\n [7] 0.43750000 0.47058824 0.50000000 0.52631579 0.05000000 0.09523810\n[13] 0.13636364 0.17391304 0.20833333 0.24000000 0.26923077 0.29629630\n[19] 0.32142857 0.34482759 0.03333333 0.06451613 0.09375000 0.12121212\n[25] 0.14705882 0.17142857 0.19444444 0.21621622 0.23684211 0.25641026\n[31] 0.02500000 0.04878049 0.07142857 0.09302326 0.11363636 0.13333333\n[37] 0.15217391 0.17021277 0.18750000 0.20408163 0.02000000 0.03921569\n[43] 0.05769231 0.07547170 0.09259259 0.10909091 0.12500000 0.14035088\n[49] 0.15517241 0.16949153 0.01666667 0.03278689 0.04838710 0.06349206\n[55] 0.07812500 0.09230769 0.10606061 0.11940299 0.13235294 0.14492754\n[61] 0.01428571 0.02816901 0.04166667 0.05479452 0.06756757 0.08000000\n[67] 0.09210526 0.10389610 0.11538462 0.12658228 0.01250000 0.02469136\n[73] 0.03658537 0.04819277 0.05952381 0.07058824 0.08139535 0.09195402\n[79] 0.10227273 0.11235955 0.01111111 0.02197802 0.03260870 0.04301075\n[85] 0.05319149 0.06315789 0.07291667 0.08247423 0.09183673 0.10101010\n[91] 0.01000000\n\na*b\n\nWarning in a * b: longer object length is not a multiple of shorter object\nlength\n\n\n [1]  10  22  36  52  70  90 112 136 162 190  20  42  66  92 120 150 182 216 252\n[20] 290  30  62  96 132 170 210 252 296 342 390  40  82 126 172 220 270 322 376\n[39] 432 490  50 102 156 212 270 330 392 456 522 590  60 122 186 252 320 390 462\n[58] 536 612 690  70 142 216 292 370 450 532 616 702 790  80 162 246 332 420 510\n[77] 602 696 792 890  90 182 276 372 470 570 672 776 882 990 100\n\na-b\n\nWarning in a - b: longer object length is not a multiple of shorter object\nlength\n\n\n [1]  -9  -9  -9  -9  -9  -9  -9  -9  -9  -9 -19 -19 -19 -19 -19 -19 -19 -19 -19\n[20] -19 -29 -29 -29 -29 -29 -29 -29 -29 -29 -29 -39 -39 -39 -39 -39 -39 -39 -39\n[39] -39 -39 -49 -49 -49 -49 -49 -49 -49 -49 -49 -49 -59 -59 -59 -59 -59 -59 -59\n[58] -59 -59 -59 -69 -69 -69 -69 -69 -69 -69 -69 -69 -69 -79 -79 -79 -79 -79 -79\n[77] -79 -79 -79 -79 -89 -89 -89 -89 -89 -89 -89 -89 -89 -89 -99\n\n\n\nc(10, 100, 100) + 2 # two is added to every element in the vector\n\n[1]  12 102 102\n\n\nExample for operations between two vectors\n\nv1 &lt;- c(1, 2, 3); v2 &lt;- c(10, 100, 1000)\nv1 + v2\n\n[1]   11  102 1003\n\n\nAdd two vectors of unequal length\nThe short vector repeats until it matches the length of the long vector.\n\nlongvec &lt;- seq(10, 100, length=10); shortvec &lt;- c(1, 2, 3, 4, 5)\n\nshortvec + longvec\n\n [1]  11  22  33  44  55  61  72  83  94 105",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#matrix",
    "href": "chap2.html#matrix",
    "title": "2  Data Structures",
    "section": "2.2 Matrix",
    "text": "2.2 Matrix\nMatrix is a 2-dimentional and a homogeneous data structure\nSyntax to create a matrix\nmatrix_name &lt;- matrix(vector_of_elements, \n                      nrow=number_of_rows,\n                      ncol=number_of_columns,\n                      byrow=logical_value, # If byrow=TRUE, then the matrix is filled in by row.\n                      dimnames=list(rnames, cnames)) # To assign row names and columns\nExample\n\nmatrix(1:6, nrow=2, ncol=3)\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\nmatrix(1:6, nrow=2)\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\nmatrix(1:6, ncol=3)\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n\n\n2.2.1 Matrix fill by rows/ columns\n\nvalues &lt;- c(10, 20, 30, 40)\nmatrix1 &lt;- matrix(values, nrow=2) # Matrix filled by columns (default option)\nmatrix1\n\n     [,1] [,2]\n[1,]   10   30\n[2,]   20   40\n\nmatrix2 &lt;- matrix(values, nrow=2, byrow=TRUE) # Matrix filled by rows\nmatrix2\n\n     [,1] [,2]\n[1,]   10   20\n[2,]   30   40\n\n\n\nbyrow=TRUE: matrix is filled in by row\nbyrow=FALSE: matrix is filled in by column\nDefault is by column\n\n\n\n2.2.2 Naming matrix rows and columns\n\nrnames &lt;- c(\"R1\", \"R2\")\ncnames &lt;- c(\"C1\", \"C2\")\nmatrix_with_names &lt;- matrix(values, nrow=2, dimnames=list(rnames, cnames))\nmatrix_with_names\n\n   C1 C2\nR1 10 30\nR2 20 40\n\n\n\n\n2.2.3 Matrix subscript\nmatraix_name[i, ] gives the ith row of a matrix\n\nmatrix1[1, ]\n\n[1] 10 30\n\n\nmatraix_name[, j] gives the jth column of a matrix\n\nmatrix1[, 2]\n\n[1] 30 40\n\n\nmatraix_name[i, j] gives the ith row and jth column element\n\nmatrix1[1, 2]\n\n[1] 30\n\n\n\nmatrix1[1, c(1, 2)] \n\n[1] 10 30\n\n\n\n\n2.2.4 cbind and rbind\nMatrices can be created by column-binding and row-binding with cbind() and rbind()\n\nx &lt;- 1:3\ny &lt;- c(10, 100, 1000)\ncbind(x, y) # binds matrices horizontally\n\n     x    y\n[1,] 1   10\n[2,] 2  100\n[3,] 3 1000\n\nrbind(x, y) #binds matrices vertically\n\n  [,1] [,2] [,3]\nx    1    2    3\ny   10  100 1000\n\n\n\n\n2.2.5 Matrix operations\nTranspose\n\nt(x)\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n\n\nMatrix multiplication\n\ny &lt;- matrix(seq(10, 60, by=10), nrow=3)\nz &lt;- x %*% y\nz\n\n     [,1] [,2]\n[1,]  140  320\n\n\nFind x in: m*x=n\nsolve(m, n)\n\n\n2.2.6 Exercise\n\nWrite R codes to obtain following matrix outputs\n\n\n\n\n\n\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   10   30   50   70   90\n[2,]   20   40   60   80  100\n\n\n\n\n\n\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   10   20   30   40   50\n[2,]   60   70   80   90  100\n\n\n\n\n\n\n\n     C1 C2 C3 C4\nRow1  1  6 11 16\nRow2  2  7 12 17\nRow3  3  8 13 18\nRow4  4  9 14 19\nRow5  5 10 15 20\n\n\n\nMr. Perera who lives in Soratha Mawatha - Wijerama wants to sell his house. He wants to decide a price for his house to list it in the market. He believes that the size of the house is one likely determinant of price. He asked from 10 homes in the neighbourhood, “what price should you ask for your home?” and the house size (in square feet). The collected data are shown below:\n\n\n\n   size_x price_y\n1    1000     810\n2    1500    1210\n3    2000    1450\n4    2500    1610\n5    3000    1690\n6    3500    2010\n7    4000    1490\n8    4500    1690\n9    5000    1890\n10   5500    2410\n\n\n\nWrite an R code to input size_x and price_y into two separate vectors.\nMr. Perera wants to compute the least squares estimates of the model \\(\\hat{Y} = \\hat{\\beta_0} + \\hat{\\beta_1}X\\). Write an R code to compute \\(\\hat{\\beta_0}\\) and \\(\\hat{\\beta_1}\\) using the matrix operation \\(\\hat{\\beta} = (X^TX)^{-1}X^TY\\). Do not use the built-in function lm.\n\nWhere,\n\\(\\hat{\\beta} =\\begin{pmatrix}\n\\hat{\\beta_0} \\\\\n\\hat{\\beta_1} \\\\\n\\end{pmatrix}\\), \\(Y =\n\\begin{pmatrix}\ny_1 \\\\\ny_2 \\\\\ny_3 \\\\\n. \\\\\n. \\\\\n. \\\\\ny_n\n\\end{pmatrix}\\) and \\(X =\n\\begin{pmatrix}\n1 & x_1 \\\\\n1 & x_2 \\\\\n1 & x_3 \\\\\n. \\\\\n. \\\\\n. \\\\\n1 & x_n\n\\end{pmatrix}\\)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#array",
    "href": "chap2.html#array",
    "title": "2  Data Structures",
    "section": "2.3 3. Array",
    "text": "2.3 3. Array\n\ndata structures for storing higher dimensional data.\na homogeneous data structure.\na special case of the array is the matrix.\n\narray(vector, dimensions, dimnames) #dimnames-as a list\n\na &lt;-  array(c(10, 20, 30, 40, 50, 60), c(1, 2, 3))\na\n\n, , 1\n\n     [,1] [,2]\n[1,]   10   20\n\n, , 2\n\n     [,1] [,2]\n[1,]   30   40\n\n, , 3\n\n     [,1] [,2]\n[1,]   50   60\n\n\n\n2.3.1 Subsetting arrays\n\na\n\n, , 1\n\n     [,1] [,2]\n[1,]   10   20\n\n, , 2\n\n     [,1] [,2]\n[1,]   30   40\n\n, , 3\n\n     [,1] [,2]\n[1,]   50   60\n\n\n\na[, , 1] # Extract first entry\n\n[1] 10 20\n\n\n\na[1, ,] # All rows in each entry\n\n     [,1] [,2] [,3]\n[1,]   10   30   50\n[2,]   20   40   60\n\n\n\n\n2.3.2 Exercise\n\nCreate the following matrix using the array function\n\n\nmatrix(1:20, ncol=5)\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\n\n\n\n2.3.3 Array with dimnames\n\ndim1 &lt;- c(\"A1\", \"A2\"); dim2 &lt;- c(\"B1\", \"B2\", \"B3\"); dim3 &lt;- c(\"c1\", \"c2\", \"c3\", \"c4\")\nz &lt;- array(1:24, c(2, 3, 4), dimnames = list(dim1, dim2, dim3))\nz\n\n, , c1\n\n   B1 B2 B3\nA1  1  3  5\nA2  2  4  6\n\n, , c2\n\n   B1 B2 B3\nA1  7  9 11\nA2  8 10 12\n\n, , c3\n\n   B1 B2 B3\nA1 13 15 17\nA2 14 16 18\n\n, , c4\n\n   B1 B2 B3\nA1 19 21 23\nA2 20 22 24\n\n\n\n\n2.3.4 Exercise\nCreate a 3D array with 3 columns, 5 rows, and 2 layers in R, and enter the following values into it:\n\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#data-frames",
    "href": "chap2.html#data-frames",
    "title": "2  Data Structures",
    "section": "2.4 4. Data Frames",
    "text": "2.4 4. Data Frames\n\nRectangular arrangement of data with rows corresponding to observational units and columns corresponding to variables.\nMore general than a matrix in that different columns can contain different modes of data.\nIt’s similar to the datasets you’d typically see in SPSS and MINITAB.\nData frames are the most common data structure you’ll deal with in R.\n\n\n2.4.1 Create a dataframe\nSyntax\nname_of_the_dataframe &lt;- data.frame(\n                          var1_name=vector of values of the first variable,\n                          var2_names=vector of values of the second variable)\nExample\n\ncorona &lt;- data.frame(ID=c(\"C001\", \"C002\", \"C003\", \"C004\"),\n                     Location=c(\"Beijing\", \"Wuhan\", \"Shanghai\", \"Beijing\"),\n                     Test_Results=c(FALSE, TRUE, FALSE, FALSE))\ncorona\n\n    ID Location Test_Results\n1 C001  Beijing        FALSE\n2 C002    Wuhan         TRUE\n3 C003 Shanghai        FALSE\n4 C004  Beijing        FALSE\n\n\nTo check if it is a dataframe\n\nis.data.frame(corona)\n\n[1] TRUE\n\n\n\n\n2.4.2 Exercise\nWrite a code to store the following values in a dataframe.\n\n\n\n\n\nGirth\nHeight\nVolume\n\n\n\n\n8.3\n70\n10.3\n\n\n8.6\n65\n10.3\n\n\n8.8\n63\n10.2\n\n\n10.5\n72\n16.4\n\n\n10.7\n81\n18.8\n\n\n10.8\n83\n19.7\n\n\n11.0\n66\n15.6\n\n\n11.0\n75\n18.2\n\n\n11.1\n80\n22.6\n\n\n11.2\n75\n19.9\n\n\n\n\n\n\n\n2.4.3 Some useful functions with dataframes\n\ncolnames(corona)\n\n[1] \"ID\"           \"Location\"     \"Test_Results\"\n\n\n\nlength(corona)\n\n[1] 3\n\ndim(corona)\n\n[1] 4 3\n\nnrow(corona)\n\n[1] 4\n\nncol(corona)\n\n[1] 3\n\nsummary(corona)\n\n      ID              Location         Test_Results   \n Length:4           Length:4           Mode :logical  \n Class :character   Class :character   FALSE:3        \n Mode  :character   Mode  :character   TRUE :1        \n\nstr(corona)\n\n'data.frame':   4 obs. of  3 variables:\n $ ID          : chr  \"C001\" \"C002\" \"C003\" \"C004\"\n $ Location    : chr  \"Beijing\" \"Wuhan\" \"Shanghai\" \"Beijing\"\n $ Test_Results: logi  FALSE TRUE FALSE FALSE\n\n\n\n\n2.4.4 Convert a matrix to a dataframe\n\nmat &lt;- matrix(1:16, ncol=4)\nmat\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    5    9   13\n[2,]    2    6   10   14\n[3,]    3    7   11   15\n[4,]    4    8   12   16\n\nmat_df &lt;- as.data.frame(mat)\nmat_df\n\n  V1 V2 V3 V4\n1  1  5  9 13\n2  2  6 10 14\n3  3  7 11 15\n4  4  8 12 16\n\n\n\n\n2.4.5 Subsetting data frames\nSelect rows\n\nhead(mat_df) # default it shows 5 rows\n\n  V1 V2 V3 V4\n1  1  5  9 13\n2  2  6 10 14\n3  3  7 11 15\n4  4  8 12 16\n\nhead(mat_df, 3) # To extract only the first three rows \n\n  V1 V2 V3 V4\n1  1  5  9 13\n2  2  6 10 14\n3  3  7 11 15\n\n\n\ntail(mat_df)\n\n  V1 V2 V3 V4\n1  1  5  9 13\n2  2  6 10 14\n3  3  7 11 15\n4  4  8 12 16\n\n\n\nmat_df\n\n  V1 V2 V3 V4\n1  1  5  9 13\n2  2  6 10 14\n3  3  7 11 15\n4  4  8 12 16\n\n\nTo select some specific rows\n\nmat_df[4, ]\n\n  V1 V2 V3 V4\n4  4  8 12 16\n\nindex &lt;- c(1, 3)\nmat_df[index, ]\n\n  V1 V2 V3 V4\n1  1  5  9 13\n3  3  7 11 15\n\n\nSelect columns\n\nSelect column(s) by variable names\n\n\nmat_df$V1 # Method 1\n\n[1] 1 2 3 4\n\nmat_df[, \"V1\"] # Method 2\n\n[1] 1 2 3 4\n\n\n\nSelect column(s) by index\n\n\nmat_df[, 2]\n\n[1] 5 6 7 8\n\n\n\n\n2.4.6 Built-in dataframes\nthere are several built-in data frames (datasets) that you can use directly without needing to import external files.\n\ndata(iris)\n\nR comes with many datasets preloaded, mostly from the datasets package. You can see them by running:\n\ndata()\n\n\n\n2.4.7 Exercise\nQuestion 1\nUse the R dataset “iris” to answer the following questions:\n\nHow many rows and columns does iris have?\nSelect the first 4 rows.\nSelect the last 6 rows.\nSelect rows 10 to 20, with all columns in the iris dataset.\nSelect rows 10 to 20 with only the Species, Petal.Width and Petal.Length.\nCreate a single vector (a new object) called ‘width’ that is the Sepal.Width column of iris.\nWhat are the column names and data types of the different columns in iris?\nHow many rows in the iris dataset have Petal.Length larger than 5 and Sepal.Width smaller than 3?\n\nQuestion 2\nThis exercise is based on mtcars built-in-dataset in R. Write R codes to obtain the answers for the followings.\n\nTo obtain the help file of mtcars\n\n\nHow many cars are in the mtcars dataset?\n\n\nHow many variables are in the mtcars dataset?\n\n\nWhat are the column names of the mtcars dataset?\n\n\nWhat is the mean miles per gallon (mpg) of the cars in the dataset?\n\n\nWhich car has the highest horsepower (hp)?\n\n\nWhat is the mean weight (wt) of the cars in the dataset?\n\n\nHow many cars have 8 cylinders (cyl)?\n\n\nWhat is the range of displacement (disp) values in the dataset?\n\n\nWhat is the median quarter mile time (qsec) for the cars?\n\n\nHow many cars have a manual transmission (am = 1)?\n\n\nWhat is the maximum miles per gallon (mpg) in the dataset?\n\n\nWhat is the minimum horsepower (hp) recorded in the dataset?\n\n\nWhich car has the lowest weight (wt)?\n\n\nHow many cars have 4 gears (gear)?\n\n\nWhat is the standard deviation of the mpg variable?\n\n\nWhat is the total number of carburetors (carb) for all cars combined?\n\n\nHow many cars have a quarter mile time (qsec) less than 18 seconds?\n\n\nWhat is the mean value of the gear variable for cars with 6 cylinders (cyl)?\n\n\nHow many cars have more than 100 horsepower (hp)?\n\n\nWhat is the correlation between horsepower (hp) and miles per gallon (mpg)?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#list",
    "href": "chap2.html#list",
    "title": "2  Data Structures",
    "section": "2.5 5. List",
    "text": "2.5 5. List\n\nLists are heterogeneous\n\nSyntax\nlist_name &lt;- list(entry1, entry2, entry3, ...)\nExample\n\nfirst_list &lt;-list(1:3, matrix(1:6, nrow=2), iris)\nfirst_list\n\n[[1]]\n[1] 1 2 3\n\n[[2]]\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n[[3]]\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n\n\n\n2.5.1 Structure of a list\n\nstr(first_list)\n\nList of 3\n $ : int [1:3] 1 2 3\n $ : int [1:2, 1:3] 1 2 3 4 5 6\n $ :'data.frame':   150 obs. of  5 variables:\n  ..$ Sepal.Length: num [1:150] 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n  ..$ Sepal.Width : num [1:150] 3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n  ..$ Petal.Length: num [1:150] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n  ..$ Petal.Width : num [1:150] 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n  ..$ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n2.5.2 Extract elements from a list\n\nfirst_list[[1]]\n\n[1] 1 2 3\n\nfirst_list[[3]]$Species\n\n  [1] setosa     setosa     setosa     setosa     setosa     setosa    \n  [7] setosa     setosa     setosa     setosa     setosa     setosa    \n [13] setosa     setosa     setosa     setosa     setosa     setosa    \n [19] setosa     setosa     setosa     setosa     setosa     setosa    \n [25] setosa     setosa     setosa     setosa     setosa     setosa    \n [31] setosa     setosa     setosa     setosa     setosa     setosa    \n [37] setosa     setosa     setosa     setosa     setosa     setosa    \n [43] setosa     setosa     setosa     setosa     setosa     setosa    \n [49] setosa     setosa     versicolor versicolor versicolor versicolor\n [55] versicolor versicolor versicolor versicolor versicolor versicolor\n [61] versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor\n [73] versicolor versicolor versicolor versicolor versicolor versicolor\n [79] versicolor versicolor versicolor versicolor versicolor versicolor\n [85] versicolor versicolor versicolor versicolor versicolor versicolor\n [91] versicolor versicolor versicolor versicolor versicolor versicolor\n [97] versicolor versicolor versicolor versicolor virginica  virginica \n[103] virginica  virginica  virginica  virginica  virginica  virginica \n[109] virginica  virginica  virginica  virginica  virginica  virginica \n[115] virginica  virginica  virginica  virginica  virginica  virginica \n[121] virginica  virginica  virginica  virginica  virginica  virginica \n[127] virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica  virginica  virginica  virginica  virginica \n[139] virginica  virginica  virginica  virginica  virginica  virginica \n[145] virginica  virginica  virginica  virginica  virginica  virginica \nLevels: setosa versicolor virginica\n\n\n\n\n2.5.3 Name entries in a list\n\nfirst_list_with_names &lt;-list(a=1:3, b=matrix(1:6, nrow=2), c=iris)\nfirst_list_with_names\n\n$a\n[1] 1 2 3\n\n$b\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n$c\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n\n\n\n\n2.5.4 Extract elements using names\n\nstr(first_list_with_names)\n\nList of 3\n $ a: int [1:3] 1 2 3\n $ b: int [1:2, 1:3] 1 2 3 4 5 6\n $ c:'data.frame':  150 obs. of  5 variables:\n  ..$ Sepal.Length: num [1:150] 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n  ..$ Sepal.Width : num [1:150] 3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n  ..$ Petal.Length: num [1:150] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n  ..$ Petal.Width : num [1:150] 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n  ..$ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\nfirst_list_with_names$a\n\n[1] 1 2 3\n\nfirst_list_with_names$c$Species\n\n  [1] setosa     setosa     setosa     setosa     setosa     setosa    \n  [7] setosa     setosa     setosa     setosa     setosa     setosa    \n [13] setosa     setosa     setosa     setosa     setosa     setosa    \n [19] setosa     setosa     setosa     setosa     setosa     setosa    \n [25] setosa     setosa     setosa     setosa     setosa     setosa    \n [31] setosa     setosa     setosa     setosa     setosa     setosa    \n [37] setosa     setosa     setosa     setosa     setosa     setosa    \n [43] setosa     setosa     setosa     setosa     setosa     setosa    \n [49] setosa     setosa     versicolor versicolor versicolor versicolor\n [55] versicolor versicolor versicolor versicolor versicolor versicolor\n [61] versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor\n [73] versicolor versicolor versicolor versicolor versicolor versicolor\n [79] versicolor versicolor versicolor versicolor versicolor versicolor\n [85] versicolor versicolor versicolor versicolor versicolor versicolor\n [91] versicolor versicolor versicolor versicolor versicolor versicolor\n [97] versicolor versicolor versicolor versicolor virginica  virginica \n[103] virginica  virginica  virginica  virginica  virginica  virginica \n[109] virginica  virginica  virginica  virginica  virginica  virginica \n[115] virginica  virginica  virginica  virginica  virginica  virginica \n[121] virginica  virginica  virginica  virginica  virginica  virginica \n[127] virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica  virginica  virginica  virginica  virginica \n[139] virginica  virginica  virginica  virginica  virginica  virginica \n[145] virginica  virginica  virginica  virginica  virginica  virginica \nLevels: setosa versicolor virginica\n\n\n\n\n2.5.5 Exercise\n\nc(\"Jan\",\"Feb\",\"Mar\")\n\n[1] \"Jan\" \"Feb\" \"Mar\"\n\nmatrix(c(3,9,5,1,-2,8), nrow = 2)\n\n     [,1] [,2] [,3]\n[1,]    3    5   -2\n[2,]    9    1    8\n\nlist(\"green\",12.3)\n\n[[1]]\n[1] \"green\"\n\n[[2]]\n[1] 12.3\n\n\n\nCreate a list containing the above vector, matrix and the list.\nName the elements as first, second and third.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap3.html",
    "href": "chap3.html",
    "title": "3  Built-in-Functions in R",
    "section": "",
    "text": "3.1 Built-in-Functions\nBuilt-in functions are predefined functions that come with R (or any programming language). You don’t need to define them yourself. They are available to use immediately after starting R.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Built-in-Functions in R</span>"
    ]
  },
  {
    "objectID": "chap3.html#built-in-functions",
    "href": "chap3.html#built-in-functions",
    "title": "3  Built-in-Functions in R",
    "section": "",
    "text": "3.1.1 How Built-in Functions Work\nA function call in R is always written as:\nfunction_name(arguments)\nParentheses () are always required.\nInside the parentheses, you place the inputs (arguments) that the function needs to work.\nExample\n\nmean(1:10)\n\n[1] 5.5\n\n\nTo obtain the help file of a function you can type\n?mean\nor\nhelp(mean)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Built-in-Functions in R</span>"
    ]
  },
  {
    "objectID": "chap3.html#commonly-used-mathematical-functions",
    "href": "chap3.html#commonly-used-mathematical-functions",
    "title": "3  Built-in-Functions in R",
    "section": "3.2 Commonly used mathematical functions",
    "text": "3.2 Commonly used mathematical functions\n\n3.2.1 Basic Arithmetic Functions\n\nsum(1, 2, 3, 4)        # Sum → 10\n\n[1] 10\n\nprod(2, 3, 4)          # Product → 24\n\n[1] 24\n\nabs(-7)                # Absolute value → 7\n\n[1] 7\n\nsign(-15)              # Sign → -1\n\n[1] -1\n\nsqrt(25)               # Square root → 5\n\n[1] 5\n\nfactorial(5)           # Factorial → 120\n\n[1] 120\n\ncumsum(c(1,2,3,4))     # Cumulative sum → 1 3 6 10\n\n[1]  1  3  6 10\n\ncumprod(c(1,2,3,4))    # Cumulative product → 1 2 6 24\n\n[1]  1  2  6 24\n\n\n\n\n3.2.2 Exponentials and Logarithms\n\nexp(1)                 # e^1 → 2.718282\n\n[1] 2.718282\n\nlog(10)                # Natural log → 2.302585\n\n[1] 2.302585\n\nlog10(1000)            # Base-10 log → 3\n\n[1] 3\n\nlog2(8)                # Base-2 log → 3\n\n[1] 3\n\n\n\n\n3.2.3 Rounding and Approximations\n\nround(3.14159, 2)      # Round to 2 decimal places → 3.14\n\n[1] 3.14\n\nceiling(3.2)           # Round up → 4\n\n[1] 4\n\nfloor(3.8)             # Round down → 3\n\n[1] 3\n\ntrunc(3.9)             # Remove decimal → 3\n\n[1] 3\n\nsignif(3.14159, 3)     # Significant digits → 3.14\n\n[1] 3.14\n\n\n\n\n3.2.4 Trigonometric Functions\n\nsin(pi/2)              # Sine → 1\n\n[1] 1\n\ncos(0)                 # Cosine → 1\n\n[1] 1\n\ntan(pi/4)              # Tangent → 1\n\n[1] 1\n\nasin(1)                # Inverse sine → π/2\n\n[1] 1.570796\n\nacos(0)                # Inverse cosine → π/2\n\n[1] 1.570796\n\natan(1)                # Inverse tangent → π/4\n\n[1] 0.7853982\n\n\n\n\n3.2.5 Hyperbolic Functions\n\nsinh(1)                # Hyperbolic sine\n\n[1] 1.175201\n\ncosh(1)                # Hyperbolic cosine\n\n[1] 1.543081\n\ntanh(1)                # Hyperbolic tangent\n\n[1] 0.7615942\n\n\n\n\n3.2.6 Miscellaneous\n\nmax(1,4,2,5)           # Maximum → 5\n\n[1] 5\n\nmin(1,4,2,5)           # Minimum → 1\n\n[1] 1\n\nrange(1,4,2,5)         # Range → 1 5\n\n[1] 1 5",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Built-in-Functions in R</span>"
    ]
  },
  {
    "objectID": "chap3.html#commonly-used-statistics-functions",
    "href": "chap3.html#commonly-used-statistics-functions",
    "title": "3  Built-in-Functions in R",
    "section": "3.3 Commonly used statistics functions",
    "text": "3.3 Commonly used statistics functions\nSample data\n\nx &lt;- c(5, 7, 9, 10, 12, 15, 18)\ny &lt;- c(2, 4, 6, 8, 10, 12, 14)\n\n\n3.3.1 Measures of Central Tendency\n\nmean(x) # mean\n\n[1] 10.85714\n\nmedian(x) # median\n\n[1] 10\n\n\n\n\n3.3.2 Measures of Spread\n\nvar(x) # variance\n\n[1] 20.47619\n\nsd(x) # standard deviation\n\n[1] 4.525062\n\nrange(x) # range\n\n[1]  5 18\n\nIQR(x) # Inter Quartile Range\n\n[1] 5.5\n\n\n\n\n3.3.3 Percentiles / Quantiles\n\nquantile(x, probs = c(0.25, 0.5, 0.75)) # quantiles\n\n 25%  50%  75% \n 8.0 10.0 13.5 \n\nquantile(x, probs = 0.9) # percentiles\n\n 90% \n16.2 \n\n\n\n\n3.3.4 Correlation and Covariance\n\ncov(x, y) # Covariance\n\n[1] 19.33333\n\ncor(x, y) # correlation\n\n[1] 0.9888918",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Built-in-Functions in R</span>"
    ]
  },
  {
    "objectID": "chap3.html#probability-distribution-functions",
    "href": "chap3.html#probability-distribution-functions",
    "title": "3  Built-in-Functions in R",
    "section": "3.4 Probability distribution functions",
    "text": "3.4 Probability distribution functions\n\nEach probability distribution in R is associated with four functions.\nNaming convention for the four functions:\nFor each function there is a root name. For example, the root name for the normal distribution is norm. This root is prefixed by one of the letters d, p, q, r.\n\nd prefix for the distribution function\np prefix for the cumulative probability\nq prefix for the quantile\nr prefix for the random number generator\n\nExample: dnorm, pnorm, qnorm, rnorm\n\n\n3.4.1 Illustration with Standard normal distribution\nThe general formula for the probability density function of the normal distribution with mean \\(\\mu\\) and variance \\(\\sigma\\) is given by\n\\[\nf_X(x) = \\frac{1}{\\sigma\\sqrt{(2\\pi)}} e^{-(x-\\mu)^2/2\\sigma^2}\n\\]\nIf we let the mean \\(\\mu=0\\) and the standard deviation \\(\\sigma=1\\), we get the probability density function for the standard normal distribution.\n\\[\nf_X(x) = \\frac{1}{\\sqrt{(2\\pi)}} e^{-(x)^2/2}\n\\]\n\\[\nf_X(x) = \\frac{1}{\\sqrt{(2\\pi)}} e^{-(x)^2/2}\n\\]\n\n\n3.4.2 dnorm\n\ndnorm(0)\n\n[1] 0.3989423\n\n\n\n\n\n\n\nStandard normal probability density function: dnorm(0)\n\n\n\n\n\n\n3.4.3 pnorm\n\npnorm(0)\n\n[1] 0.5\n\n\n\n\n\n\n\nStandard normal probability density function: pnorm(0)\n\n\n\n\n]\n\n\n3.4.4 qnorm\n\nqnorm(0.5)\n\n[1] 0\n\n\n\n\n\n\n\nStandard normal probability density function: qnorm(0.5)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Built-in-Functions in R</span>"
    ]
  },
  {
    "objectID": "chap3.html#test-and-type-conversion-functions",
    "href": "chap3.html#test-and-type-conversion-functions",
    "title": "3  Built-in-Functions in R",
    "section": "3.5 Test and Type conversion functions",
    "text": "3.5 Test and Type conversion functions\n\n\n\nTest\nConvert\n\n\n\n\n\n\n\n\nis.numeric()\nas.numeric()\n\n\nis.character()\nas.character()\n\n\nis.vector()\nas.vector()\n\n\nis.matrix()\nas.matrix()\n\n\nis.data.frame()\nas.data.frame()\n\n\nis.factor()\nas.factor()\n\n\nis.logical()\nas.logical()\n\n\nis.na()",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Built-in-Functions in R</span>"
    ]
  },
  {
    "objectID": "chap4.html",
    "href": "chap4.html",
    "title": "4  Writing Your Own Functions",
    "section": "",
    "text": "4.1 Syntax\nSometimes we need to create our own functions for a specific purpose. They are called user-defined functions.\nFunctions are created using the function()\nMain components of a function\nExample\ncal_power &lt;- function(x){\n\na &lt;- x^2; b &lt;- x^3\nout &lt;- c(a, b)\nnames(out) &lt;- c(\"squared\", \"cubed\")\nout # or return(out)\n\n}\nIn this case\nEvaluation\ncal_power(2)\n\nsquared   cubed \n      4       8",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Writing Your Own Functions</span>"
    ]
  },
  {
    "objectID": "chap4.html#syntax",
    "href": "chap4.html#syntax",
    "title": "4  Writing Your Own Functions",
    "section": "",
    "text": "Function name\nFunction inputs\nFunction body\nFunction output\n\n\nname &lt;- function(arg1, aug2, ...){\n\n&lt;FUNCTION BODY&gt;\n\nreturn(value) \n\n}\n\n\n\n\nFunction name: cal_power\nFunction inputs: x\nFunction body:\n\na &lt;- x^2; b &lt;- x^3\nout &lt;- c(a, b)\nnames(out) &lt;- c(\"squared\", \"cubed\")\n\nFunction output: out",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Writing Your Own Functions</span>"
    ]
  },
  {
    "objectID": "chap4.html#exercise",
    "href": "chap4.html#exercise",
    "title": "4  Writing Your Own Functions",
    "section": "4.2 Exercise",
    "text": "4.2 Exercise\n\nWhat are the key factors to consider when selecting a function name in R?\nHow should function argument names be chosen for clarity and usability?\nIs it necessary to explicitly use return() to output a value from a function in R?",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Writing Your Own Functions</span>"
    ]
  },
  {
    "objectID": "chap4.html#function-with-single-line",
    "href": "chap4.html#function-with-single-line",
    "title": "4  Writing Your Own Functions",
    "section": "4.3 Function with single line",
    "text": "4.3 Function with single line\nMethod 1: with { }\ncal_sqrt &lt;- function(x){\n\nx^2\n\n}\nMethod 2: without { }\ncal_sqrt &lt;- function(x) x^2",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Writing Your Own Functions</span>"
    ]
  },
  {
    "objectID": "chap4.html#exercise-1",
    "href": "chap4.html#exercise-1",
    "title": "4  Writing Your Own Functions",
    "section": "4.4 Exercise",
    "text": "4.4 Exercise\n\nWrite a function to calculate the median.\n\nhelp:\n\n5%%2\n\n[1] 1\n\n4%%2\n\n[1] 0\n\n\n\nWrite a function to calculate the correlation coefficient\n\n\\[r=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{x})(y_i-\\bar{y})}{\\sqrt{\\sum_{i=1}^n(x_i-\\bar{x})^2\\sum_{i=1}^n(y_i-\\bar{y})^2}}\\]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Writing Your Own Functions</span>"
    ]
  },
  {
    "objectID": "chap5.html",
    "href": "chap5.html",
    "title": "5  Logical Operators in R",
    "section": "",
    "text": "5.1 List of commonly used logical operators in R.\nLogical operators are used to compare values and return TRUE or FALSE. They are very useful in conditions, filtering, and control flow.\n== : equal to\n!= : not equal to\n&gt; : greater than\n&lt; : less than\n&lt;= : less than or equal to\n&gt;= : greater than or equal to\n| : OR (at least one condition must be TRUE)\n& : AND (both conditions must be TRUE)\nExamples\nc(1, 2, 3) != c(10, 20, 3)\n\n[1]  TRUE  TRUE FALSE\n1:5 &gt; 3\n\n[1] FALSE FALSE FALSE  TRUE  TRUE\n1:5 &lt; 3\n\n[1]  TRUE  TRUE FALSE FALSE FALSE",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Logical Operators in R</span>"
    ]
  },
  {
    "objectID": "chap5.html#membership-operator-in",
    "href": "chap5.html#membership-operator-in",
    "title": "5  Logical Operators in R",
    "section": "5.2 Membership Operator: %in%",
    "text": "5.2 Membership Operator: %in%\nThe %in% operator is used to check whether elements of one vector are present in another vector.\nReturns a logical vector (TRUE or FALSE) of the same length as the first input.\nExample\nx &lt;- 1:10 y &lt;- 1:3 x %in% y # Is each element of x in y? y %in% x # Is each element of y in x?",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Logical Operators in R</span>"
    ]
  },
  {
    "objectID": "chap6.html",
    "href": "chap6.html",
    "title": "6  Control Structures",
    "section": "",
    "text": "6.1 if-else\nConditional executions control the flow of the execution.\nConditional Statements and Loops in R\nTeaching analogy\nDraw a star on star-shaped cookies and draw a heart on heart-shaped cookies.\nSyntax\nIn programming, we use if–else when we need to choose between two possible options:\nExample\ntest_even_odd &lt;- function(x){\n  if (x %% 2 == 0){\n    print(\"even number\")\n  } else {\n    print(\"odd number\")\n  }\n}\ntest_even_odd(5)\n\n[1] \"odd number\"\n\ntest_even_odd(6)\n\n[1] \"even number\"",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#if-else",
    "href": "chap6.html#if-else",
    "title": "6  Control Structures",
    "section": "",
    "text": "The if block executes when the condition is true.\nThe else block executes when the condition is false.\n\nif (condition) {\n    # do something\n} else {\n    # do something else\n}",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#vectorization-with-ifelse",
    "href": "chap6.html#vectorization-with-ifelse",
    "title": "6  Control Structures",
    "section": "6.2 vectorization with ifelse",
    "text": "6.2 vectorization with ifelse\nifelse is vectorized, meaning it works on entire vectors at once.\nifelse(condition, TRUE condition output, FALSE condition output)\nExample\n\ntest_even_odd_v2 &lt;- function(x){\n  \n  ifelse(x %% 2 == 0, \"even number\", \"odd number\")\n  \n}\n\n\ntest_even_odd_v2(5)\n\nFALSE [1] \"odd number\"\n\ntest_even_odd_v2(c(1,6))\n\nFALSE [1] \"odd number\"  \"even number\"\n\n\n\n6.2.1 Difference between if-else and ifelse\n\nif-else: Evaluates only on one value, not a whole vector.\nifelse: A vectorized function. It checks the condition for every element in a vector and returns a result of the same length, applying if or else to each element individually.\n\nif-else Example\n\ntest_even_odd &lt;- function(x){\n  if (x %% 2 == 0) {\n    print(\"even number\")\n  } else {\n    print(\"odd number\")\n  }\n}\n\n\ntest_even_odd(5)\n\nFALSE [1] \"odd number\"\n\n\n\ntest_even_odd(c(1,6))\n# returns an error\n\nifelse Example\n\ntest_even_odd_v2 &lt;- function(x){\n  ifelse (x %% 2 == 0, \"even number\", \"odd number\")\n}\n\ntest_even_odd_v2(5)\n\nFALSE [1] \"odd number\"\n\ntest_even_odd_v2(c(1,6))\n\nFALSE [1] \"odd number\"  \"even number\"",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#ifelseifelse",
    "href": "chap6.html#ifelseifelse",
    "title": "6  Control Structures",
    "section": "6.3 if–elseif–else",
    "text": "6.3 if–elseif–else\nTeaching analogy\nIf the cookie shape is;\n\nstar → draw a star;\nif it’s heart → draw a heart;\nif it’s Christmas tree → draw a tree;\nif it’s shoe → draw a shoe;\nif it’s house → draw a house;\nelse → draw a gingerbread man.\n\n\n\n\n\n\n\n\n\n\nSyntax and example\nWe use if–elseif–else when we want to select one option from more than two possible options.\n\nThe first if condition is checked.\n\nIf it’s TRUE, that block runs, and the rest are skipped.\nIf it’s FALSE, the program checks the next elseif condition.\n\nThis continues until one condition is TRUE, or else the final else block runs (if provided).\n\nif–elseif–else checks one condition after another.\n\ngrade_marks &lt;- function(marks){\n  \n  if (marks &lt; 20) {\n    \"D\"\n  } else if (marks &lt;= 50) {\n    \"C\"\n  } else if (marks &lt;= 60) {\n    \"B\"\n  } else {\n    \"A\"\n  }\n}\n\ngrade_marks(75)\n\n[1] \"A\"",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#if",
    "href": "chap6.html#if",
    "title": "6  Control Structures",
    "section": "6.4 if",
    "text": "6.4 if\nIt is possible to use only if statement.\n\ncheck.negative &lt;- function(x){\n\n  if (x &lt; 0 ) {\n  print(\"X is negative\")\n  }\n\n}\n\n\ncheck.negative(-10)\n\n[1] \"X is negative\"\n\ncheck.negative(10)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#for",
    "href": "chap6.html#for",
    "title": "6  Control Structures",
    "section": "6.5 for",
    "text": "6.5 for\nFor the first 50 cookies, fill the center of cookies with jam.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#while",
    "href": "chap6.html#while",
    "title": "6  Control Structures",
    "section": "6.6 while",
    "text": "6.6 while",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#repeat",
    "href": "chap6.html#repeat",
    "title": "6  Control Structures",
    "section": "6.7 repeat",
    "text": "6.7 repeat",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#break",
    "href": "chap6.html#break",
    "title": "6  Control Structures",
    "section": "6.8 break",
    "text": "6.8 break",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#next",
    "href": "chap6.html#next",
    "title": "6  Control Structures",
    "section": "6.9 next",
    "text": "6.9 next",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap6.html#switch",
    "href": "chap6.html#switch",
    "title": "6  Control Structures",
    "section": "6.10 switch",
    "text": "6.10 switch",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Control Structures</span>"
    ]
  },
  {
    "objectID": "chap8.html",
    "href": "chap8.html",
    "title": "8  Data Wrangling",
    "section": "",
    "text": "8.1 Exercise\nThis exercise is based on the DStidy dataset from the DSjobtracker package in R. This dataset was compiled from job advertisements for roles like statisticians and data scientists. It includes information on job roles, required qualifications, technical and soft skills, tools, platforms, and other relevant criteria frequently mentioned in the job advertisements. Write R code to answer each question. Use the provided output to verify the correctness of your code.\n[1] 437\nHelp: distinct function\n# A tibble: 20 × 1\n   Job_Category                                   \n   &lt;chr&gt;                                          \n 1 Unimportant                                    \n 2 Data Science                                   \n 3 Data Science and Data Engineering              \n 4 Data Analyst                                   \n 5 &lt;NA&gt;                                           \n 6 AI                                             \n 7 Business/Systems Analysts                      \n 8 Computer/Information Technology                \n 9 Science & Technology                           \n10 Sciences                                       \n11 Statistics                                     \n12 Data science                                   \n13 Information Services                           \n14 Analyst, Engineering and Information Technology\n15 Research, Analyst, and Information Technology  \n16 Analyst                                        \n17 Administrative                                 \n18 Machine Learning                               \n19 Data Analytics                                 \n20 Actuarial Science\n# A tibble: 1 × 3\n    BSc   MSc   PhD\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1   293   152    71\n# A tibble: 26 × 2\n   Job_Category                                  avg_salary\n   &lt;chr&gt;                                              &lt;dbl&gt;\n 1 Unimportant                                    11108498.\n 2 &lt;NA&gt;                                            4689542.\n 3 Machine Learning                                 108000 \n 4 Data Analyst                                     107890 \n 5 Data Science                                     102805.\n 6 AI                                                95000 \n 7 Data Science and Data Engineering                 78500 \n 8 Data science                                      75125.\n 9 Research, Analyst, and Information Technology     70970.\n10 Internet Publishing                               70000 \n# ℹ 16 more rows\n# A tibble: 299 × 2\n   City            Prop_English\n   &lt;chr&gt;                  &lt;dbl&gt;\n 1 Anaheim                    1\n 2 Arges                      1\n 3 Athens                     1\n 4 Attiki                     1\n 5 Berlin                     1\n 6 Bugis                      1\n 7 Calgary                    1\n 8 Central Denmark            1\n 9 Chengdu                    1\n10 Darmstadt                  1\n# ℹ 289 more rows\n# A tibble: 1,172 × 4\n      ID Job_title                                   Company               City \n   &lt;dbl&gt; &lt;chr&gt;                                       &lt;chr&gt;                 &lt;chr&gt;\n 1     1 &lt;NA&gt;                                        &lt;NA&gt;                  &lt;NA&gt; \n 2     2 Junior Data Scientist                       Dialog Axiata PLC     Colo…\n 3     3 Engineer, Analytics & Data Science          London Stock Exchang… Colo…\n 4     4 CI-Statistical Analyst/Business Analyst-CMB E.D. Bullard Company  Colo…\n 5     5 DA-Data Analyst-CMB                         E.D. Bullard Company  Colo…\n 6     6 Data Scientist                              Emirates Center for … Kual…\n 7     7 Principal HR Data Scientist                 BHP Group Limited     Kual…\n 8     8 DV-Data Visualization & QA Specialist-CMB   E.D. Bullard Company  Colo…\n 9     9 Product Manager, Product Data Science       Numerator             Otta…\n10    10 Associate Director, Data Science            Phreesia Inc.         Otta…\n# ℹ 1,162 more rows\n# A tibble: 774 × 109\n      ID Consultant DateRetrieved       DatePublished       Job_title    Company\n   &lt;dbl&gt; &lt;chr&gt;      &lt;dttm&gt;              &lt;dttm&gt;              &lt;chr&gt;        &lt;chr&gt;  \n 1     1 Thiyanga   2020-08-05 00:00:00 NA                  &lt;NA&gt;         &lt;NA&gt;   \n 2     2 Jayani     2020-08-07 00:00:00 2020-07-31 00:00:00 Junior Data… Dialog…\n 3     3 Jayani     2020-08-07 00:00:00 2020-08-06 00:00:00 Engineer, A… London…\n 4     6 Jayani     2020-08-07 00:00:00 2020-08-13 00:00:00 Data Scient… Emirat…\n 5     7 Jayani     2020-08-13 00:00:00 2020-08-13 00:00:00 Principal H… BHP Gr…\n 6    10 Jayani     2020-08-12 00:00:00 2020-08-11 00:00:00 Associate D… Phrees…\n 7    13 Jayani     2020-08-13 00:00:00 2020-08-13 00:00:00 Data Scient… Visier…\n 8    17 Jayani     2020-08-13 00:00:00 2020-08-11 00:00:00 Data Scienc… Clearb…\n 9    18 Jayani     2020-08-13 00:00:00 2020-08-12 00:00:00 Marketing i… Yellow…\n10    20 Jayani     2020-08-13 00:00:00 2020-08-13 00:00:00 Data Analyst Ernst …\n# ℹ 764 more rows\n# ℹ 103 more variables: R &lt;dbl&gt;, SAS &lt;dbl&gt;, SPSS &lt;dbl&gt;, Python &lt;dbl&gt;,\n#   MAtlab &lt;dbl&gt;, Scala &lt;dbl&gt;, `C#` &lt;dbl&gt;, `MS Word` &lt;dbl&gt;, `Ms Excel` &lt;dbl&gt;,\n#   `OLE/DB` &lt;dbl&gt;, `Ms Access` &lt;dbl&gt;, `Ms PowerPoint` &lt;dbl&gt;,\n#   Spreadsheets &lt;dbl&gt;, Data_visualization &lt;dbl&gt;, Presentation_Skills &lt;dbl&gt;,\n#   Communication &lt;dbl&gt;, BigData &lt;dbl&gt;, Data_warehouse &lt;dbl&gt;,\n#   cloud_storage &lt;dbl&gt;, Google_Cloud &lt;dbl&gt;, AWS &lt;dbl&gt;, …\n# A tibble: 1,172 × 4\n   `MS Word` `Ms Excel` `Ms Access` `Ms PowerPoint`\n       &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1         0          0           0               0\n 2         0          0           0               0\n 3         0          0           0               0\n 4         0          0           0               0\n 5         1          1           1               1\n 6         0          0           0               0\n 7         0          0           0               0\n 8         1          1           0               1\n 9         0          0           0               0\n10         0          0           0               0\n# ℹ 1,162 more rows\nHelp: use year function in the lubridate package\n# A tibble: 251 × 109\n      ID Consultant DateRetrieved       DatePublished       Job_title    Company\n   &lt;dbl&gt; &lt;chr&gt;      &lt;dttm&gt;              &lt;dttm&gt;              &lt;chr&gt;        &lt;chr&gt;  \n 1     1 Kavya      2023-01-05 18:30:00 2023-01-04 18:30:00 Senior Engi… DFCC B…\n 2     2 Kavya      2023-01-05 18:30:00 2023-01-04 18:30:00 Database En… &lt;NA&gt;   \n 3     3 Kavya      2023-01-05 18:30:00 2023-01-03 18:30:00 Database Ad… Abans  \n 4     4 Kavya      2023-01-05 18:30:00 2023-01-02 18:30:00 Consulting … George…\n 5     6 Kavya      2023-01-05 18:30:00 2023-01-05 18:30:00 Data Scient… LSEG   \n 6     7 Kavya      2023-01-05 18:30:00 2023-01-05 18:30:00 D & A Azure… Ernst …\n 7     8 Kavya      2023-01-05 18:30:00 2023-01-04 18:30:00 Data Analyst Novels…\n 8     9 Kavya      2023-01-05 18:30:00 2023-01-04 18:30:00 Data Analyst ADA    \n 9    10 Kavya      2023-01-05 18:30:00 2023-01-04 18:30:00 Machine Lea… Bestka…\n10    12 Kavya      2023-01-05 18:30:00 2023-01-05 18:30:00 Data Scient… JKH    \n# ℹ 241 more rows\n# ℹ 103 more variables: R &lt;dbl&gt;, SAS &lt;dbl&gt;, SPSS &lt;dbl&gt;, Python &lt;dbl&gt;,\n#   MAtlab &lt;dbl&gt;, Scala &lt;dbl&gt;, `C#` &lt;dbl&gt;, `MS Word` &lt;dbl&gt;, `Ms Excel` &lt;dbl&gt;,\n#   `OLE/DB` &lt;dbl&gt;, `Ms Access` &lt;dbl&gt;, `Ms PowerPoint` &lt;dbl&gt;,\n#   Spreadsheets &lt;dbl&gt;, Data_visualization &lt;dbl&gt;, Presentation_Skills &lt;dbl&gt;,\n#   Communication &lt;dbl&gt;, BigData &lt;dbl&gt;, Data_warehouse &lt;dbl&gt;,\n#   cloud_storage &lt;dbl&gt;, Google_Cloud &lt;dbl&gt;, AWS &lt;dbl&gt;, …\n# A tibble: 758 × 109\n      ID Consultant DateRetrieved       DatePublished       Job_title    Company\n   &lt;dbl&gt; &lt;chr&gt;      &lt;dttm&gt;              &lt;dttm&gt;              &lt;chr&gt;        &lt;chr&gt;  \n 1     1 Thiyanga   2020-08-05 00:00:00 NA                  &lt;NA&gt;         &lt;NA&gt;   \n 2     2 Jayani     2020-08-07 00:00:00 2020-07-31 00:00:00 Junior Data… Dialog…\n 3     3 Jayani     2020-08-07 00:00:00 2020-08-06 00:00:00 Engineer, A… London…\n 4     4 Jayani     2020-08-07 00:00:00 2020-07-24 00:00:00 CI-Statisti… E.D. B…\n 5     5 Jayani     2020-08-07 00:00:00 2020-07-24 00:00:00 DA-Data Ana… E.D. B…\n 6     7 Jayani     2020-08-13 00:00:00 2020-08-13 00:00:00 Principal H… BHP Gr…\n 7     8 Jayani     2020-08-07 00:00:00 2020-07-24 00:00:00 DV-Data Vis… E.D. B…\n 8     9 Jayani     2020-08-13 00:00:00 2020-08-13 00:00:00 Product Man… Numera…\n 9    10 Jayani     2020-08-12 00:00:00 2020-08-11 00:00:00 Associate D… Phrees…\n10    11 Jayani     2020-08-13 00:00:00 2020-08-13 00:00:00 Data Engine… SDK    \n# ℹ 748 more rows\n# ℹ 103 more variables: R &lt;dbl&gt;, SAS &lt;dbl&gt;, SPSS &lt;dbl&gt;, Python &lt;dbl&gt;,\n#   MAtlab &lt;dbl&gt;, Scala &lt;dbl&gt;, `C#` &lt;dbl&gt;, `MS Word` &lt;dbl&gt;, `Ms Excel` &lt;dbl&gt;,\n#   `OLE/DB` &lt;dbl&gt;, `Ms Access` &lt;dbl&gt;, `Ms PowerPoint` &lt;dbl&gt;,\n#   Spreadsheets &lt;dbl&gt;, Data_visualization &lt;dbl&gt;, Presentation_Skills &lt;dbl&gt;,\n#   Communication &lt;dbl&gt;, BigData &lt;dbl&gt;, Data_warehouse &lt;dbl&gt;,\n#   cloud_storage &lt;dbl&gt;, Google_Cloud &lt;dbl&gt;, AWS &lt;dbl&gt;, …\n# A tibble: 239 × 109\n      ID Consultant DateRetrieved       DatePublished       Job_title    Company\n   &lt;dbl&gt; &lt;chr&gt;      &lt;dttm&gt;              &lt;dttm&gt;              &lt;chr&gt;        &lt;chr&gt;  \n 1    12 Jayani     2020-08-13 00:00:00 2020-08-13 00:00:00 Data Analyst EPCOR …\n 2    24 Jayani     2020-08-13 00:00:00 2020-08-13 00:00:00 Data Scient… Elabra…\n 3    45 Jayani     2020-08-13 00:00:00 2020-08-11 00:00:00 Associate P… SnapHu…\n 4    52 Thimani    2020-08-07 00:00:00 2020-07-24 00:00:00 Data Scienc… Summit…\n 5    54 Thimani    2020-08-07 00:00:00 2020-08-01 00:00:00 Data Scient… PA con…\n 6    56 Thimani    2020-08-07 00:00:00 2020-07-31 00:00:00 Data Scient… Brilli…\n 7    57 Thimani    2020-08-07 00:00:00 2020-07-14 00:00:00 Data Scient… G-Rese…\n 8    58 Thimani    2020-08-07 00:00:00 2020-07-19 00:00:00 Manager-Dat… Biz2Cr…\n 9    62 Thimani    2020-08-09 00:00:00 2020-07-19 00:00:00 Senior Mana… Britis…\n10    63 Thimani    2020-08-09 00:00:00 2020-07-23 00:00:00 VP, Data Sc… 7Park …\n# ℹ 229 more rows\n# ℹ 103 more variables: R &lt;dbl&gt;, SAS &lt;dbl&gt;, SPSS &lt;dbl&gt;, Python &lt;dbl&gt;,\n#   MAtlab &lt;dbl&gt;, Scala &lt;dbl&gt;, `C#` &lt;dbl&gt;, `MS Word` &lt;dbl&gt;, `Ms Excel` &lt;dbl&gt;,\n#   `OLE/DB` &lt;dbl&gt;, `Ms Access` &lt;dbl&gt;, `Ms PowerPoint` &lt;dbl&gt;,\n#   Spreadsheets &lt;dbl&gt;, Data_visualization &lt;dbl&gt;, Presentation_Skills &lt;dbl&gt;,\n#   Communication &lt;dbl&gt;, BigData &lt;dbl&gt;, Data_warehouse &lt;dbl&gt;,\n#   cloud_storage &lt;dbl&gt;, Google_Cloud &lt;dbl&gt;, AWS &lt;dbl&gt;, …\n# A tibble: 5 × 2\n  Experience_Category                prop_presentation\n  &lt;chr&gt;                                          &lt;dbl&gt;\n1 More than 10 years                             0.25 \n2 More than 2 and less than 5 years              0.306\n3 More than 5 and less than 10 years             0.318\n4 Two or less years                              0.275\n5 Unknown or Not needed                          0.360",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Data Wrangling</span>"
    ]
  },
  {
    "objectID": "chap8.html#exercise",
    "href": "chap8.html#exercise",
    "title": "8  Data Wrangling",
    "section": "",
    "text": "How many job advertisements mention both R and Python as required skills?\n\n\n\nWhich job categories require R but not Python?\n\n\n\n\nWhat is the most common educational qualification required (BSc_needed, MSc_needed, PhD_needed) across all job categories?\n\n\n\nWhat is the average salary for job roles that require SQL, grouped by Job_Category?\n\n\n\nCalculate the proportion of job advertisements that require English by City.\n\n\n\nSelect only the columns: ID, Job_title, Company, and City.\n\n\n\nFilter the dataset to include only jobs that mention Python as a required skill.\n\n\n\nSelect all columns related to Microsoft Office tools.\n\n\n\nFilter jobs that were published in or after the year 2023.\n\n\n\n\nFilter the jobs where both PhD_needed and MSc_needed are 0.\n\n\n\nFilter out all rows where Salary is missing (NA).\n\n\n\nFor each Experience_Category, compute the percentage of jobs that require Presentation_Skills.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Data Wrangling</span>"
    ]
  },
  {
    "objectID": "chap11.html",
    "href": "chap11.html",
    "title": "11  Regression Analysis",
    "section": "",
    "text": "11.1 Introduction",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Regression Analysis</span>"
    ]
  },
  {
    "objectID": "chap11.html#simple-linear-regression",
    "href": "chap11.html#simple-linear-regression",
    "title": "11  Regression Analysis",
    "section": "11.2 Simple Linear Regression",
    "text": "11.2 Simple Linear Regression",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Regression Analysis</span>"
    ]
  },
  {
    "objectID": "chap11.html#multiple-linear-regression",
    "href": "chap11.html#multiple-linear-regression",
    "title": "11  Regression Analysis",
    "section": "11.3 Multiple Linear Regression",
    "text": "11.3 Multiple Linear Regression",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Regression Analysis</span>"
    ]
  },
  {
    "objectID": "chap11.html#regression-with-dummy-variables",
    "href": "chap11.html#regression-with-dummy-variables",
    "title": "11  Regression Analysis",
    "section": "11.4 Regression with Dummy Variables",
    "text": "11.4 Regression with Dummy Variables",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Regression Analysis</span>"
    ]
  },
  {
    "objectID": "chap11.html#exercise",
    "href": "chap11.html#exercise",
    "title": "11  Regression Analysis",
    "section": "11.5 Exercise",
    "text": "11.5 Exercise\n\nTo understand the effectiveness of marketing investments, a manager of a company wants to analyze the relationship between marketing expenditures (USD) and the number of sales. Fit a simple linear regression model with marketing spend as the independent variable and sales as the dependent variable. Interpret the outputs. Note that, before fitting a regression model, it is essential to conduct an exploratory analysis.\n\n\n\n\n\n\nMarketing expenditures (USD)\nNumber of Sales\n\n\n\n\n100\n522.3\n\n\n115\n596.2\n\n\n120\n617.7\n\n\n132\n682.3\n\n\n144\n740.2\n\n\n154\n792.5\n\n\n158\n806.4\n\n\n160\n813.5\n\n\n170\n871.0\n\n\n180\n920.6\n\n\n181\n927.9\n\n\n190\n968.5\n\n\n200\n1021.6\n\n\n210\n1068.2\n\n\n220\n1118.9\n\n\n230\n1171.2\n\n\n240\n1217.3\n\n\n250\n1272.1\n\n\n260\n1323.6\n\n\n270\n1369.6\n\n\n\n\n\n2.To evaluate the association of marketing expenditures on sales, a company manager aims to analyze the relationship between marketing expenditures and sales across two different locations. Fit a multiple linear regression model with marketing expenditures and location as the independent variables and sales as the dependent variable. Interpret the outputs. Note that, before fitting a regression model, it is essential to conduct an exploratory analysis.\n\n\n\n\n\nMarketing expenditures (USD)\nNumber of Sales\nLocation\n\n\n\n\n100\n522.3\nA\n\n\n115\n596.2\nA\n\n\n120\n617.7\nA\n\n\n132\n682.3\nA\n\n\n144\n740.2\nA\n\n\n154\n792.5\nA\n\n\n158\n806.4\nA\n\n\n160\n813.5\nA\n\n\n170\n871.0\nA\n\n\n180\n920.6\nA\n\n\n181\n927.9\nA\n\n\n190\n968.5\nA\n\n\n200\n1021.6\nA\n\n\n210\n1068.2\nA\n\n\n220\n1118.9\nA\n\n\n230\n1171.2\nA\n\n\n240\n1217.3\nA\n\n\n250\n1272.1\nA\n\n\n260\n1323.6\nA\n\n\n270\n1369.6\nA\n\n\n100\n522.3\nB\n\n\n115\n596.2\nB\n\n\n120\n617.7\nB\n\n\n132\n682.3\nB\n\n\n144\n740.2\nB\n\n\n154\n792.5\nB\n\n\n158\n806.4\nB\n\n\n160\n813.5\nB\n\n\n170\n871.0\nB\n\n\n180\n920.6\nB\n\n\n181\n927.9\nB\n\n\n190\n968.5\nB\n\n\n200\n1021.6\nB\n\n\n210\n1068.2\nB\n\n\n220\n1118.9\nB\n\n\n230\n1171.2\nB\n\n\n240\n1217.3\nB\n\n\n250\n1272.1\nB\n\n\n260\n1323.6\nB\n\n\n270\n1369.6\nB",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Regression Analysis</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "12  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Summary</span>"
    ]
  }
]