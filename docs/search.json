[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Programming and Data Analysis with R",
    "section": "",
    "text": "Preface\nThe goal of this book is to empower you with essential skills in R programming for statistical computing and data analysis.\nEach chapter of this book is designed to be hands-on and practical, with explanations, illustrative examples, and exercises to reinforce your understanding.\nThis book is written from Quarto.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction to R and RStudio",
    "section": "",
    "text": "1.1 Chapter Roadmap",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#chapter-roadmap",
    "href": "intro.html#chapter-roadmap",
    "title": "1  Introduction to R and RStudio",
    "section": "",
    "text": "What is R?\nWhy learn R?\nR and Rstudio\nDownloading R and RStudio\nInstalling R and RStudio\nDownload and Installing Rtools\nFamiliarize with RStudio interface\nCreating and saving an RStudio project",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#what-is-r",
    "href": "intro.html#what-is-r",
    "title": "1  Introduction to R and RStudio",
    "section": "1.2 What is R?",
    "text": "1.2 What is R?\nR is a popular programming language and environment specifically designed for statistical computing, data analysis, and data visualisation. The language designers are Ross Ihaka and Robert Gentleman at the Department of Statistics, University of Auckland, New Zealand. The parent language is S. R is primarily a functional programming language.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#why-learn-r",
    "href": "intro.html#why-learn-r",
    "title": "1  Introduction to R and RStudio",
    "section": "1.3 Why learn R?",
    "text": "1.3 Why learn R?\n1. R is a free and open-source software package.\n2. R is a powerful software for data analysis and statistical computing.\nFollowing are some steps that need to perform for your data analysis projects.\n\nImport/ Export data\nData cleaning\nData visualisation\nData modelling\nModel deployment\nEnsuring validity and interpretability of models\nPresentation and communication of results\n\nAdditionally, ensuring the reproducibility of data analysis and modeling workflows is crucial for enhancing trustworthiness. R has packages to fulfill all these data analysis and modeling needs.\n3. R can be utilized for tasks beyond traditional data analysis, modelling and statistical computing\n\nScientific Writing Tools: R can be used for scientific writing, particularly through the use of packages like knitr rmarkdown, and Quarto. These packages allow you to integrate R code directly into documents alongside text and figures, which is highly useful for reproducible research and automated report generation. These are useful for thesis writing, book writing or any other documentation work. This book “Programming and Data Analysis with R” is written based on Quarto.\nWebsite Development: R can be used developed websites, particularly through the use of packages like knitr rmarkdown, blogdown and Quarto. For example, the website https://hellor.netlify.app/ is written based on blogdown and https://thiyangt.github.io/rprogramming/ is written based on quarto.\nCreating Presentations: R can generate dynamic and visually appealing presentations using rmarkdown, xaringan, quarto, etc. These packages enable you to embed R code, plots, and interactive elements directly into presentation slides. Here is an example presentation developed using xaringan https://thiyangt.github.io/whyR2021keynote/#1\nCreating Posters: R can be utilized to design scientific posters using packages such as posterdown. These packages provide templates for creating professional-looking posters directly from R Markdown documents. You can include plots, tables, formatted text and graphics in your poster design.\nWeb Application Development: This capability is particularly useful for developing data-driven tools, simulations, and dashboards that can be accessed through web browsers without the need for users to install additional software.\n\n4. There is a large community of users.\nLearning a programming language with a large community of users is particularly important for several reasons:\n\nSupport and Resources to learn: This means there are abundant resources available online, including tutorials, documentation, forums, and open-source libraries. When you encounter issues or need guidance, you’re more likely to find solutions quickly due to the active community.\nRegular updates and improvements: Popular languages receive regular updates and improvements driven by community feedback and contributions.\nCollaboration and Career opportunities: Since, there are many users you are very likely to find good job opportunities and collaboration opportunities.\nNetworking: Being part of a large programming community allows you to participate in blackthorns, and attend meetups or conferences. One such a R community is “R Ladies”.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#r-and-rstudio",
    "href": "intro.html#r-and-rstudio",
    "title": "1  Introduction to R and RStudio",
    "section": "1.4 R and RStudio",
    "text": "1.4 R and RStudio\nWhat is the difference between R and RStudio? R is the programming language that provides the statistical computing capabilities. R Studio is an Integrated Development Environment(IDE) for R. Dr Julia Lowndes illustrates the distinctions between R and RStudio using the analogy as follows:\n\n“If R were an airplane, RStudio would be the airport, providing many, many supporting services that make it easier for you, the pilot, to take off and go to awesome places. Sure, you can fly an airplane without an airport, but having those runways and supporting infrastructure is a game-changer.”\n\n\nJulie Lowndes (https://jules32.github.io/2016-07-12-Oxford/R_RStudio/, accessed on May 1, 2024)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#downloading-r-and-rstudio",
    "href": "intro.html#downloading-r-and-rstudio",
    "title": "1  Introduction to R and RStudio",
    "section": "1.5 Downloading R and RStudio",
    "text": "1.5 Downloading R and RStudio\nTo download R:\nVisit the link https://cran.r-project.org/ to download R. Choose the appropriate version depending on the operating system you are using.\nTo download RStudio (This can also be used to download R as well):\nVisit the link https://posit.co/download/rstudio-desktop/ to download RStudio IDE. Make sure that you are downloading the appropriate version that matches your computer’s operating system. From the same link you can also download the R. Furthermore, RStudio requires a specific version of R. For example “RStudio requires R 3.3.0+”. Make sure you have the correct R version. The version of the R programming language is denoted using a format like “x.x.x”, where each “x” represents a number indicating the major version, minor version, and patch level respectively.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#installing-r-and-rstudio",
    "href": "intro.html#installing-r-and-rstudio",
    "title": "1  Introduction to R and RStudio",
    "section": "1.6 Installing R and Rstudio",
    "text": "1.6 Installing R and Rstudio\nFirst, you should install R. After installation R, you can install RStudio.\n\n1.6.1 Installing R\nDouble click on the the downloaded R installer file. This will start the install process. Usually the default options are fine. If you want to watch a step-by-step tutorial on how to install R for Windows, you can watch the video here.\n\n\n\n\n1.6.2 Installing RStudio\nYou must have R installed before installing RStudio. Double click on the the downloaded RStudio installer file. This will start the install process. Usually the default options are fine. If you want to watch a step-by-step tutorial on how to install R for Windows, you can watch the video here.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#download-and-installing-rtools",
    "href": "intro.html#download-and-installing-rtools",
    "title": "1  Introduction to R and RStudio",
    "section": "1.7 Download and Installing Rtools",
    "text": "1.7 Download and Installing Rtools\nWindows users also require additional software known as Rtools, particularly for installing certain packages. Go to the website https://cran.r-project.org/bin/windows/Rtools/ and download the Rtools version that is compatible with your R version.\nIf you want to watch a step-by-step tutorial on how to install R for Windows, you can watch the video here.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#familiarize-with-rstudio-interface",
    "href": "intro.html#familiarize-with-rstudio-interface",
    "title": "1  Introduction to R and RStudio",
    "section": "1.8 Familiarize with RStudio interface",
    "text": "1.8 Familiarize with RStudio interface\nStep 1: Double click RStudio icon. This will open an RStudio project window as follows:\n\n\n\n\n\n\n\n\n\nStep 2: To obtain the source or script editor use the following steps:\nFile &gt; New File &gt; R Script\n\n\n\n\n\n\n\n\n\nNow we have four window. They are as follows:\n\n\n\n\n\n\n\n\n\n\nSource window: Here you can write your R codes.\nConsole: This is where you execute your commands to obtain the outputs.\nEnvironment, History, Connections, Tutorial: Out of the different tabs you see here, the most important ones are the environment and the history tab.\n\nThe Environment pane shows all the objects (like data frames, variables, functions, etc.) that are currently in your R session.\nThe History tab keeps a record of all the commands you have run in the Console.\n\nFile, Plots, Packages, Help, Viewer, Presentations:\n\nFiles allows you to navigate your files.\nThe graphical outputs are displayed here.\nAllows users to install, update, load, unload packages\nHelp files corresponds to the functions are shown here. Help files provides function descriptions, examples and references for you to learn on your own. To access the help file of a function type “?” followed by the function name . For example, `?ls`.\nViewer/ Presentations: Useful when working with RMarkdown or Quarto documentations. We will look at this in Chapter 8.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#change-the-appearance-of-rstudio-pane",
    "href": "intro.html#change-the-appearance-of-rstudio-pane",
    "title": "1  Introduction to R and RStudio",
    "section": "1.9 Change the appearance of RStudio pane",
    "text": "1.9 Change the appearance of RStudio pane\nThis is an optional step. To change the appearance, font size, RStudio theme colour follow the steps below:\nStep 1: Go to Tools &gt; Global Options. You will get the window below\n\n\n\n\n\n\n\n\n\nStep 2: Select Appearance tab\n\n\n\n\n\n\n\n\n\nHere, I select the theme to “Cobalt”. Then the appearance of the window will change as below:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#creating-an-rstudio-project",
    "href": "intro.html#creating-an-rstudio-project",
    "title": "1  Introduction to R and RStudio",
    "section": "1.10 Creating an RStudio project",
    "text": "1.10 Creating an RStudio project\nTo create an RStudio project, please follow the following steps\nStep 1: File &gt; New Projects\n\n\n\n\n\n\n\n\n\nStep 2: Click on the “New Directory” on the following window.\n\n\n\n\n\n\n\n\n\nStep 3: Click on “New Project”\n\n\n\n\n\n\n\n\n\nStep 4: Give a directory name and a path to save",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#to-save-an-r-studio-projects",
    "href": "intro.html#to-save-an-r-studio-projects",
    "title": "1  Introduction to R and RStudio",
    "section": "1.11 To save an R Studio projects",
    "text": "1.11 To save an R Studio projects\nCategory 1: If you have created a project using the steps shown in Section 1.10, you can save your R Script files by clicking on the floppy disk icon, as illustrated in the figure below:\n\n\n\n\n\n\n\n\n\nCategory 2: If you started coding without creating a project and want to save your work, go to File &gt; Save As and follow the steps.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "intro.html#exercise",
    "href": "intro.html#exercise",
    "title": "1  Introduction to R and RStudio",
    "section": "1.12 Exercise",
    "text": "1.12 Exercise\nThe goal of this exercise is to help you become familiar with the R Studio environment and create and save projects.\n\nCreate a new project in the RStudio IDE. Name your project as lesson1.\nSelect a suitable theme for your RStudio IDE’s user interface.\n\n\nHelp: Navigate to Tools &gt; Global Options &gt; Appearance .\n\n\nChange the RStudio pane layout as follows:\n\n\n\n\n\n\n\n\n\n\n\nCreate a folder called data inside your lesson1 project folder.\nCreate another folder called src inside your lesson1 project folder.\nOpen a script file and save it as exercise1.R inside the src folder.\nType the following commands on exercise1.R and run it on the console. See the changes happening under the “Environment” tab and the “History” tab.\n\n\n100 + 200\nrnorm(100)\ngrades &lt;- c(\"A+\", \"A-\", \"A\", \"B\", \"F\")\nrandom.numbers &lt;- rnorm(100)\nrandom.numbers*100\nls()\n\n\nClose the project by saving the workspace.\nReopen your project by clicking the leason1.Rproj inside your lesson1 folder. Open the .RData file and the .Rhistory file and observe them.\nType the following commands on exercise1.R and run them on the console.\n\n\nmarks &lt;- c(100, 70, 80, 60)\n\n\nClose the project without saving the workspace.\nReopen the lesson1.Rproj and type ls() on the console, and observe the output. (marks is not listed, but the other objects are available. Why?)\nType the following command in the console to observe changes in the console, environment, history, and Viewer windows. Observe the outputs of the code and gain an understanding of the purpose of each line.\n\n\ndata(\"iris\")\nView(iris)\nsummary(iris)\nhist(iris$Sepal.Length)\nplot(x=iris$Sepal.Length, y=iris$Sepal.Width) # Method 1\nplot(Sepal.Length ~ Sepal.Width, data=iris) # Method 2\nplot(x=iris$Sepal.Length, y=iris$Sepal.Width, col=iris$Species) \nplot(Sepal.Length ~ Sepal.Width, data=iris)\nplot(Sepal.Length ~ Sepal.Width, pch=16, cex=0.6, data=iris)\nplot(Sepal.Length ~ Sepal.Width, pch=16, cex=0.6, data=iris)\nplot(Sepal.Length ~ Sepal.Width, col=\"forestgreen\", pch=16, cex=0.6, data=iris)\n\n\nType the following code to obtain list of predefined colours.\n\n\ncolours()\n\n\nExplore what changes the following code do on the last plot that you took.\n\ncode chunk 15.1\n\nplot(Sepal.Length ~ Sepal.Width, col=\"forestgreen\", pch=16, cex=0.6, data=iris, main = \"Scatterplot Between Sepal Length and Petal Length\",\n     xlab = \"Sepal Length (cm)\",\n     ylab = \"Sepal Width (cm)\")\n\ncode chunk 15.2\n\nmodel &lt;- lm(Sepal.Length ~ Sepal.Width, data=iris)\nplot(Sepal.Length ~ Sepal.Width, col=\"forestgreen\", pch=16, cex=0.6, data=iris, main = \"Scatterplot Between Sepal Length and Petal Length\",\n     xlab = \"Sepal Length (cm)\",\n     ylab = \"Sepal Width (cm)\")\nabline(model, col=\"tomato1\")\n\n\nType the following commands and understand what each line of code is doing. Interpret the outputs.\n\ncode chunk 16.1\n\nplot(iris)\n\ncode chunk 16.2\n\nplot(~ Petal.Length + Petal.Width + Sepal.Width, data=iris)\n\n\nType the following command and open your data folder and see the changes that had occurred.\n\n\nwrite.csv(iris, file=\"data/iris.csv\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "chap2.html",
    "href": "chap2.html",
    "title": "2  Data Structures",
    "section": "",
    "text": "2.1 Vectors",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#vectors",
    "href": "chap2.html#vectors",
    "title": "2  Data Structures",
    "section": "",
    "text": "One dimensional data object.\nHomogeneous data structure. That means data in a vector must only be one type or mode (numeric, character, or logical). You cannot mix different types of data. If you try to mix different types of data, R will automatically convert them into one type.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#creating-vectors",
    "href": "chap2.html#creating-vectors",
    "title": "2  Data Structures",
    "section": "2.2 Creating Vectors",
    "text": "2.2 Creating Vectors\nVectors can be made in four primary ways. They are\n\nusing c() function\nusing : function\nusing seq function\nusing rep function\n\nMethods ii–iv simplify vector creation. They are useful when there is a pattern in data.\n\n2.2.1 Concatenate: c()\nsyntax:\nExample:\nThe following will create the vector but not assigned a name.\n\nc(1996, 1998, 2000, 2005)\n\n[1] 1996 1998 2000 2005\n\n\nAssigning a name to vector:\nThe advantage of assigning a name is that we can reuse the same set of values by calling the vector name.\n\na &lt;- c(1996, 1998, 2000, 2005)\na\n\n[1] 1996 1998 2000 2005\n\n\n\n\n2.2.2 Colon: :\nThe : function can be used to create a regular decreasing or increasing sequence.\nExamples:\n\n1:10\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n10:1\n\n [1] 10  9  8  7  6  5  4  3  2  1\n\n-0.5:10\n\n [1] -0.5  0.5  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5  9.5\n\n-0.3:10\n\n [1] -0.3  0.7  1.7  2.7  3.7  4.7  5.7  6.7  7.7  8.7  9.7\n\n\nIn all of the above sequences the increment is one. The output will display the numbers only within the range.\n\n\n2.2.3 Sequence: seq\nseq function cal also be used for creating regular sequence. With seq you can control the increment and length of the output.\nExample 1\n\nseq(1, 19)\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19\n\n\nExample 2\n\nseq(1, 19, length.out=8)\n\n[1]  1.000000  3.571429  6.142857  8.714286 11.285714 13.857143 16.428571\n[8] 19.000000\n\n\nExample 3\n\nseq(1, 19, by = 3)\n\n[1]  1  4  7 10 13 16 19",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#repeat-rep",
    "href": "chap2.html#repeat-rep",
    "title": "2  Data Structures",
    "section": "2.3 Repeat: rep",
    "text": "2.3 Repeat: rep\nThe rep function can be used if there is a pattern of repetition in the data.\nExample 1\nThe number 8 is repeated three times.\n\nrep(8, 5)\n\n[1] 8 8 8 8 8\n\n\nExample 2\nThe sequence 1, 2, 3 is repeated five times.\n\nrep(1:3, times=5)\n\n [1] 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\n\nExample 3\nSame as in Example 2 above.\n\nrep(1:3, 5)\n\n [1] 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\n\nExample 4\nEach element in the sequence is repeated five times.\n\nrep(1:3, each=5)\n\n [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3\n\n\nExample 5\nFirst, each element is repeated five times. After that, the whole sequence is repeated three times.\n\nrep(1:3, each=5, times=3)\n\n [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 1 1 1 1 1 2 2 2\n[39] 2 2 3 3 3 3 3\n\n\nExample 6\nSame as before. Changing the ordering of each and time does not change the output.\n\nrep(1:3, times=3, each=5)\n\n [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 1 1 1 1 1 2 2 2\n[39] 2 2 3 3 3 3 3",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#coercion",
    "href": "chap2.html#coercion",
    "title": "2  Data Structures",
    "section": "2.4 Coercion",
    "text": "2.4 Coercion\nWhen you try to include different types they will be coerced to the most flexible type.\n\na &lt;- c(1, 3, \"GPA\", TRUE, 1L)\ntypeof(a)\n\n[1] \"character\"\n\n\nExplicit coercion means that if we try to convert a data type to another data type intentionally using a specific function. For example,\n\nb &lt;- c(3.1, 3.2, 3.7, 5.9)\nb\n\n[1] 3.1 3.2 3.7 5.9\n\nas.integer(b)\n\n[1] 3 3 3 5",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#functions-that-can-be-used-to-inspect-vectors",
    "href": "chap2.html#functions-that-can-be-used-to-inspect-vectors",
    "title": "2  Data Structures",
    "section": "2.5 Functions that can be used to inspect vectors",
    "text": "2.5 Functions that can be used to inspect vectors\nConsider the vector below\n\nexample.vec &lt;- c(1,  2,  3, 4, 5, 6, 7, 8)\n\n\nTo check the storage mode\n\n\ntypeof(example.vec)\n\n[1] \"double\"\n\n\n\nTo check the class type\n\n\nclass(example.vec)\n\n[1] \"numeric\"\n\n\n\nTesting functions\n\n\nis.character(example.vec)\n\n[1] FALSE\n\nis.integer(example.vec)\n\n[1] FALSE\n\nis.logical(example.vec)\n\n[1] FALSE\n\nis.double(example.vec)\n\n[1] TRUE\n\n\n\nMathematical and statistical functions\n\n\nsum(example.vec)\n\n[1] 36\n\nmean(example.vec)\n\n[1] 4.5\n\nsummary(example.vec)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.00    2.75    4.50    4.50    6.25    8.00 \n\n\n\nTo check if there are any missing values\n\n\nis.na(example.vec)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n\nThere are many more functions that you can use with vectors. We will learn about them in the upcoming chapters.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#exercise",
    "href": "chap2.html#exercise",
    "title": "2  Data Structures",
    "section": "2.6 Exercise",
    "text": "2.6 Exercise\n\nWrite R codes to create the following vectors: If you see patterns in the data, use vector simplification methods.\n\n\n\n\n\n\n\n[1] 1990 1992 1934 1957 1970 2000 2005\n\n\n\n\n\n\n\n [1] 3 6 9 3 6 9 3 6 9 3 6 9 3 6 9\n\n\n\n\n\n\n\n [1] 3 3 3 3 3 6 6 6 6 6 9 9 9 9 9\n\n\n\n\n\n\n\n [1] 3 3 3 3 3 6 6 6 6 6 9 9 9 9 9 3 3 3 3 3 6 6 6 6 6 9 9 9 9 9\n\n\n\n\n\n\n\n [1]  1  4  7 10 13 16 19 22 25 28 31 34\n\n\n\n\n\n\n\n  [1] 0.1000000 0.1020202 0.1040404 0.1060606 0.1080808 0.1101010 0.1121212\n  [8] 0.1141414 0.1161616 0.1181818 0.1202020 0.1222222 0.1242424 0.1262626\n [15] 0.1282828 0.1303030 0.1323232 0.1343434 0.1363636 0.1383838 0.1404040\n [22] 0.1424242 0.1444444 0.1464646 0.1484848 0.1505051 0.1525253 0.1545455\n [29] 0.1565657 0.1585859 0.1606061 0.1626263 0.1646465 0.1666667 0.1686869\n [36] 0.1707071 0.1727273 0.1747475 0.1767677 0.1787879 0.1808081 0.1828283\n [43] 0.1848485 0.1868687 0.1888889 0.1909091 0.1929293 0.1949495 0.1969697\n [50] 0.1989899 0.2010101 0.2030303 0.2050505 0.2070707 0.2090909 0.2111111\n [57] 0.2131313 0.2151515 0.2171717 0.2191919 0.2212121 0.2232323 0.2252525\n [64] 0.2272727 0.2292929 0.2313131 0.2333333 0.2353535 0.2373737 0.2393939\n [71] 0.2414141 0.2434343 0.2454545 0.2474747 0.2494949 0.2515152 0.2535354\n [78] 0.2555556 0.2575758 0.2595960 0.2616162 0.2636364 0.2656566 0.2676768\n [85] 0.2696970 0.2717172 0.2737374 0.2757576 0.2777778 0.2797980 0.2818182\n [92] 0.2838384 0.2858586 0.2878788 0.2898990 0.2919192 0.2939394 0.2959596\n [99] 0.2979798 0.3000000\n\n\n\n\n\n\n\n [1] -0.5  0.5  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5  9.5 10.5\n\n\n\n\n\n\n\n [1]  2  4  6  8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50\n[26] 52 54 56 58 60 62 64 66 68 70 72\n\n\n\nUse the typeof() function to check the R storage mode of the following vectors and class() to check the class type of the vector.\n\n\nlogical_vector &lt;- c(TRUE, FALSE, TRUE, FALSE)\ninteger_vector &lt;- c(1L, 2L, 3L, 4L)\ndouble_vector &lt;- c(1.1, 2.2, 3.3, 4.4)\ncomplex_vector &lt;- c(1+1i, 2+2i, 3+3i, 4+4i)\ncharacter_vector &lt;- c(\"a\", \"b\", \"c\", \"d\")\nnull_vector &lt;- NULL\ntime_data &lt;- 1996:2006\ntime_series_data &lt;- ts(1996:2006)\n\n\nCreate the vector (3, 3, 3, . . . 3, 6, 6, . . . 6, 9, 9, 9, . . . 9), where there are 10 occurrences of 3, 20 occurrences of 6 and 30 occurrences of 9.\nFind the value of the following expression.\n\n\n\n\\(\\sum_{i=1}^{100}i\\)\n\\(\\sum_{i=1}^{100}i^2\\)\n\n\n\nGenerate a sequence using the code seq(from=1, to=10, by=1). What other ways can you generate the same sequence?\nCreate a vector to hold population values, and label each element with the corresponding province name. The plot will display population values when hovered over.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#vector-operations",
    "href": "chap2.html#vector-operations",
    "title": "2  Data Structures",
    "section": "2.7 Vector Operations",
    "text": "2.7 Vector Operations\nTo be added",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#creating-matrix",
    "href": "chap2.html#creating-matrix",
    "title": "2  Data Structures",
    "section": "2.8 Creating Matrix",
    "text": "2.8 Creating Matrix",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#matrix-operations",
    "href": "chap2.html#matrix-operations",
    "title": "2  Data Structures",
    "section": "2.9 Matrix Operations",
    "text": "2.9 Matrix Operations",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#exercise-1",
    "href": "chap2.html#exercise-1",
    "title": "2  Data Structures",
    "section": "2.10 Exercise",
    "text": "2.10 Exercise\n\nWrite R codes to obtain following matrix outputs\n\n\n\n\n\n\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   10   30   50   70   90\n[2,]   20   40   60   80  100\n\n\n\n\n\n\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   10   20   30   40   50\n[2,]   60   70   80   90  100\n\n\n\n\n\n\n\n     C1 C2 C3 C4\nRow1  1  6 11 16\nRow2  2  7 12 17\nRow3  3  8 13 18\nRow4  4  9 14 19\nRow5  5 10 15 20\n\n\n\nMr. Perera who lives in Soratha Mawatha - Wijerama wants to sell his house. He wants to decide a price for his house to list it in the market. He believes that the size of the house is one likely determinant of price. He asked from 10 homes in the neighbourhood, “what price should you ask for your home?” and the house size (in square feet). The collected data are shown below:\n\n\n\n   size_x price_y\n1    1000     810\n2    1500    1210\n3    2000    1450\n4    2500    1610\n5    3000    1690\n6    3500    2010\n7    4000    1490\n8    4500    1690\n9    5000    1890\n10   5500    2410\n\n\n\nWrite an R code to input size_x and price_y into two separate vectors.\nMr. Perera wants to compute the least squares estimates of the model \\(\\hat{Y} = \\hat{\\beta_0} + \\hat{\\beta_1}X\\). Write an R code to compute \\(\\hat{\\beta_0}\\) and \\(\\hat{\\beta_1}\\) using the matrix operation \\(\\hat{\\beta} = (X^TX)^{-1}X^TY\\). Do not use the built-in function lm.\n\nWhere,\n\\(\\hat{\\beta} =\\begin{pmatrix}\n\\hat{\\beta_0} \\\\\n\\hat{\\beta_1} \\\\\n\\end{pmatrix}\\), \\(Y =\n\\begin{pmatrix}\ny_1 \\\\\ny_2 \\\\\ny_3 \\\\\n. \\\\\n. \\\\\n. \\\\\ny_n\n\\end{pmatrix}\\) and \\(X =\n\\begin{pmatrix}\n1 & x_1 \\\\\n1 & x_2 \\\\\n1 & x_3 \\\\\n. \\\\\n. \\\\\n. \\\\\n1 & x_n\n\\end{pmatrix}\\)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#creating-arrays",
    "href": "chap2.html#creating-arrays",
    "title": "2  Data Structures",
    "section": "2.11 Creating Arrays",
    "text": "2.11 Creating Arrays",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#exercise-2",
    "href": "chap2.html#exercise-2",
    "title": "2  Data Structures",
    "section": "2.12 Exercise",
    "text": "2.12 Exercise\n\nCreate a 3D array with 3 columns, 5 rows, and 2 layers in R, and enter the following values into it:\n\n\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#creating-data-frames",
    "href": "chap2.html#creating-data-frames",
    "title": "2  Data Structures",
    "section": "2.13 Creating data frames",
    "text": "2.13 Creating data frames",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#exercise-3",
    "href": "chap2.html#exercise-3",
    "title": "2  Data Structures",
    "section": "2.14 Exercise",
    "text": "2.14 Exercise",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#subsetting",
    "href": "chap2.html#subsetting",
    "title": "2  Data Structures",
    "section": "2.15 Subsetting",
    "text": "2.15 Subsetting",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "chap2.html#exercise-4",
    "href": "chap2.html#exercise-4",
    "title": "2  Data Structures",
    "section": "2.16 Exercise",
    "text": "2.16 Exercise\nThis exercise is based on mtcars built-in-dataset in R. Write R codes to obtain the answers for the followings.\n\nTo obtain the help file of mtcars\n\n\nHow many cars are in the mtcars dataset?\n\n\nHow many variables are in the mtcars dataset?\n\n\nWhat are the column names of the mtcars dataset?\n\n\nWhat is the mean miles per gallon (mpg) of the cars in the dataset?\n\n\nWhich car has the highest horsepower (hp)?\n\n\nWhat is the mean weight (wt) of the cars in the dataset?\n\n\nHow many cars have 8 cylinders (cyl)?\n\n\nWhat is the range of displacement (disp) values in the dataset?\n\n\nWhat is the median quarter mile time (qsec) for the cars?\n\n\nHow many cars have a manual transmission (am = 1)?\n\n\nWhat is the maximum miles per gallon (mpg) in the dataset?\n\n\nWhat is the minimum horsepower (hp) recorded in the dataset?\n\n\nWhich car has the lowest weight (wt)?\n\n\nHow many cars have 4 gears (gear)?\n\n\nWhat is the standard deviation of the mpg variable?\n\n\nWhat is the total number of carburetors (carb) for all cars combined?\n\n\nHow many cars have a quarter mile time (qsec) less than 18 seconds?\n\n\nWhat is the mean value of the gear variable for cars with 6 cylinders (cyl)?\n\n\nHow many cars have more than 100 horsepower (hp)?\n\n\nWhat is the correlation between horsepower (hp) and miles per gallon (mpg)?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Structures</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Summary</span>"
    ]
  }
]